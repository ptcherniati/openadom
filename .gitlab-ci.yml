image: docker:19.03.12

# Pour l'utilisation de testcontainers
# https://www.testcontainers.org/supported_docker_environment/continuous_integration/gitlab_ci/
services:
  - docker:dind

cache:
  paths:
    - ./.m2/repository
  # keep cache across branch
  key: "$CI_BUILD_REF_NAME"

variables:
  MAVEN_OPTS: "-Djava.awt.headless=true -Dmaven.repo.local=./.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
  # Instruct Testcontainers to use the daemon of DinD.
  DOCKER_HOST: "tcp://docker:2375"
  # Improve performance with overlayfs.
  DOCKER_DRIVER: overlay2
  # Depuis la version 18.09, l'image docker dind génère un certificat TLS, et pour le bon fonctionnement des services, ce certificat doit être partagé par l'ensemble de ces derniers !
  # Le lien ci-dessous explique la procédure à suivre au niveau des runners afin de partager le certificat généré sous forme d'un volume :
  # https://about.gitlab.com/releases/2019/07/31/docker-in-docker-with-docker-19-dot-03/
  # comme on a pas accès à la configuration des runners, on désactive explicitement la génération d'un certificat TLS
  DOCKER_TLS_CERTDIR: ""

stages:
  - build
  - test
  - package

maven_build:
  image: maven:3.6.3-openjdk-11
  stage: build
  script: mvn --batch-mode clean compile
  tags:
    - docker

maven_test_rest_1:
  image: maven:3.6.3-openjdk-11
  stage: test
  script: mvn --batch-mode clean test -Ptest_rest_1
  tags:
    - docker
maven_test_rest_2:
  image: maven:3.6.3-openjdk-11
  stage: test
  script: mvn --batch-mode clean test -Ptest_rest_2
  tags:
    - docker
maven_test_checker:
  image: maven:3.6.3-openjdk-11
  stage: test
  script: mvn --batch-mode clean test -Ptest_checker
  tags:
    - docker
maven_test_model:
  image: maven:3.6.3-openjdk-11
  stage: test
  script: mvn --batch-mode clean test -Ptest_model
  tags:
    - docker
maven_test_persistence:
  image: maven:3.6.3-openjdk-11
  stage: test
  script: mvn --batch-mode clean test -Ptest_persistence
  tags:
    - docker

maven:
  image: maven:3.6.3-openjdk-11
  stage: package
  script: mvn --batch-mode clean package -Dmaven.test.skip=true
  tags:
    - docker

maven_registry:
  image: maven:3.6.3-openjdk-11
  stage: package
  script:
    - MVN_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
    - mvn versions:set -DnewVersion=$CI_COMMIT_BRANCH.$MVN_VERSION
    - mvn versions:commit
    - mvn deploy -Pmia -s ci-settings.xml

npm:
  image: node:12-alpine
  stage: package
  script:
    - cd ui2
    - npm ci
    - npm run build
  tags:
    - docker