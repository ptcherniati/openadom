version: 0
application:
  defaultLanguage: fr
  internationalizationName:
    fr: SOERE mon SOERE avec dépôt
    en: SOERE my SOERE with repository
  name: MONSORE
  version: 1
compositeReferences:
  sites:
    components:
      - reference: type_de_sites
      - parentKeyColumn: tze_type_nom
        parentRecursiveKey: zet_chemin_parent
        reference: sites
  projet:
    components:
      - reference: projet
references:
  especes:
    internationalizationName:
      fr: Espèces
      en: Species
    internationalizedColumns:
      esp_definition_fr:
        fr: esp_definition_fr
        en: esp_definition_en
    internationalizationDisplay:
      pattern:
        fr: '{esp_nom}'
        en: '{esp_nom}'
    keyColumns:
      - esp_nom
    columns:
      esp_nom: null
      esp_definition_fr: null
      esp_definition_en: null
      colonne_homonyme_entre_referentiels: null
  projet:
    internationalizationName:
      fr: Projet
      en: Project
    internationalizedColumns:
      nom_key:
        fr: nom_fr
        en: nom_en
      definition_fr:
        fr: definition_fr
        en: definition_en
    internationalizationDisplay:
      pattern:
        fr: '{nom_key}'
        en: '{nom_key}'
    keyColumns:
      - nom_key
    columns:
      nom_key: null
      nom_fr: null
      nom_en: null
      definition_fr: null
      definition_en: null
      colonne_homonyme_entre_referentiels: null
  sites:
    validations:
      typeSitesRef:
        internationalizationName:
          fr: référence au type de site
        checker:
          name: Reference
          params:
            refType: type_de_sites
        columns: [ tze_type_nom ]
      siteParentRef:
        internationalizationName:
          fr: référence à la colonne parent
        checker:
          name: Reference
          params:
            refType: sites
        columns: [ zet_chemin_parent ]
    keyColumns:
      - zet_chemin_parent
      - zet_nom_key
    internationalizationName:
      fr: Site
      en: Site
    internationalizedColumns:
      zet_nom_key:
        fr: zet_nom_fr
        en: zet_nom_en
      zet_description_fr:
        fr: zet_description_fr
        en: zet_description_en
    internationalizationDisplay:
      pattern:
        fr: '{zet_nom_key}'
        en: '{zet_nom_key}'
    columns:
      tze_type_nom: null
      zet_nom_key: null
      zet_nom_fr: null
      zet_nom_en: null
      zet_description_fr: null
      zet_description_en: null
      zet_chemin_parent: null
  themes:
    keyColumns:
      - nom_key
    internationalizationName:
      fr: Thème
      en: Thematic
    internationalizedColumns:
      nom_key:
        fr: nom_fr
        en: nom_en
      description_fr:
        fr: description_fr
        en: description_en
    internationalizationDisplay:
      pattern:
        fr: '{nom_key}'
        en: '{nom_key}'
    columns:
      nom_key: null
      nom_fr: null
      nom_en: null
      description_fr: null
      description_en: null
  type de fichiers:
    keyColumns:
      - nom_key
    internationalizationName:
      fr: Types de fichiers
      en: Files types
    internationalizedColumns:
      nom_key:
        fr: nom_fr
        en: nom_en
      description_fr:
        fr: description_fr
        en: description_en
    internationalizationDisplay:
      pattern:
        fr: '{nom_key}'
        en: '{nom_key}'
    columns:
      nom_key: null
      nom_fr: null
      nom_en: null
      description_fr: null
      description_en: null
  type_de_sites:
    keyColumns:
      - tze_nom_key
    internationalizationName:
      fr: Types de sites
      en: Sites types
    internationalizedColumns:
      tze_nom_key:
        fr: tze_nom_fr
        en: tze_nom_en
      tze_definition_fr:
        fr: tze_definition_fr
        en: tze_definition_en
    internationalizationDisplay:
      pattern:
        fr: '{tze_nom_key}'
        en: '{tze_nom_key}'
    columns:
      tze_nom_key: null
      tze_nom_fr: null
      tze_nom_en: null
      tze_definition_fr: null
      tze_definition_en: null
  types_de_donnees_par_themes_de_sites_et_projet:
    internationalizationName:
      fr: Types de données par site et projet
      en: Data types by site and project
    internationalizationDisplay:
      pattern:
        fr: >-
          nom du projet: {nom du projet}, nom du site : {nom du site}, nom du
          thème : {nom du thème}, nom du type de données : {nom du type de
          données}
        en: >-
          projet name: {nom du projet}, site name : {nom du site}, theme name :
          {nom du thème}, data type name : {nom du type de données}
    validations:
      projetRef:
        internationalizationName:
          fr: référence au projet
        checker:
          name: Reference
          params:
            refType: projet
        columns: [ nom du projet ]
      sitesRef:
        internationalizationName:
          fr: référence au site
        checker:
          name: Reference
          params:
            refType: sites
        columns: [ nom du site ]
      themesRef:
        internationalizationName:
          fr: référence au theme
        checker:
          name: Reference
          params:
            refType: themes
        columns: [ nom du thème ]
      checkDatatype:
        internationalizationName:
          fr: test
        checker:
          name: GroovyExpression
          params:
            groovy:
              expression: >
                String datatype = Arrays.stream(datum.get("nom du type de
                données").split("_")).collect{it.substring(0, 1)}.join(); return
                application.getDataType().contains(datatype);
    keyColumns:
      - nom du projet
      - nom du site
      - nom du thème
      - nom du type de données
    columns:
      nom du projet: null
      nom du site: null
      nom du thème: null
      nom du type de données: null
  unites:
    keyColumns:
      - nom_key
    internationalizationName:
      fr: Unités
      en: Units
    internationalizedColumns:
      code_key:
        fr: code_fr
        en: code_en
      nom_key:
        fr: nom_fr
        en: nom_en
    internationalizationDisplay:
      pattern:
        fr: '{nom_key} ({code_key})'
        en: '{nom_key} ({code_key})'
    columns:
      code_key: null
      code_fr: null
      code_en: null
      nom_key: null
      nom_fr: null
      nom_en: null
  valeurs_qualitatives:
    keyColumns:
      - nom_key
      - valeur_key
    internationalizationName:
      fr: Valeurs qualitatives
      en: Qualitative values
    internationalizedColumns:
      nom_key:
        fr: nom_fr
        en: nom_en
      valeur_key:
        fr: valeur_fr
        en: valeur_en
    internationalizationDisplay:
      pattern:
        fr: '{valeur_key}'
        en: '{valeur_key}'
    columns:
      nom_key: null
      nom_fr: null
      nom_en: null
      valeur_key: null
      valeur_fr: null
      valeur_en: null
  variables:
    keyColumns:
      - nom_key
    internationalizationName:
      fr: Variables
      en: Variables
    internationalizedColumns:
      nom_key:
        fr: nom_fr
        en: nom_en
      definition_fr:
        fr: definition_fr
        en: definition_en
    internationalizationDisplay:
      pattern:
        fr: '{nom_key}'
        en: '{nom_key}'
    columns:
      nom_key: null
      nom_fr: null
      nom_en: null
      definition_fr: null
      definition_en: null
      isQualitative: null
  variables_et_unites_par_types_de_donnees:
    validations:
      variableRef:
        internationalizationName:
          fr: référence à la variable
        checker:
          name: Reference
          params:
            refType: variables
        columns: [ nom de la variable ]
      uniteRef:
        internationalizationName:
          fr: référence à l'unité'
        checker:
          name: Reference
          params:
            refType: unites
        columns: [ nom de l'unité ]
      checkDatatype:
        internationalizationName:
          fr: test
        checker:
          name: GroovyExpression
          params:
            groovy:
              expression: >
                String datatype = Arrays.stream(datum.get("nom du type de
                données").split("_")).collect{it.substring(0, 1)}.join(); return
                application.getDataType().contains(datatype);
    keyColumns:
      - nom du type de données
      - nom de la variable
    internationalizationName:
      fr: Variables et unités par type de données
      en: Variables and units by data type
    internationalizationDisplay:
      pattern:
        fr: >-
          nom du type de données : {nom du type de données}, nom de la variable
          : {nom de la variable}, : nom de l'unité {nom de l'unité}
        en: >-
          datatype name : {nom du type de données}, variable name : {nom de la
          variable}, : unit name {nom de l'unité}
    columns:
      nom du type de données: null
      nom de la variable: null
      nom de l'unité: null
dataTypes:
  pem:
    internationalizationName:
      fr: Piégeage en Montée
      en: Trap in ascent
    internationalizationDisplays:
      especes:
        pattern:
          fr: 'espèce :{esp_nom}'
          en: 'espèce :{esp_nom}'
    repository:
      toto: test
    data:
      projet:
        components:
          value:
            checker:
              name: Reference
              params:
                refType: projet
      site:
        components:
          bassin: null
          plateforme: null
          chemin:
            defaultValue:
              expression: >
                return references.get("sites")
                .find{it.getRefValues().get("zet_chemin_parent").equals(datumByVariableAndComponent.get("site").get("bassin"))
                &&
                it.getRefValues().get("zet_nom_key").equals(datumByVariableAndComponent.get("site").get("plateforme"))}
                .getHierarchicalKey();
              references:
                - sites
            checker:
              name: Reference
              params:
                refType: sites
        computedComponents:
          site_bassin:
            computation:
              expression: >
                return references.get("sites")
                .find{it.getNaturalKey().equals(datumByVariableAndComponent.get("site").get("bassin"))}
                .getHierarchicalKey();
              references:
                - sites
            checker:
              name: Reference
              params:
                refType: sites
      date:
        components:
          value:
            checker:
              name: Date
              params:
                pattern: dd/MM/yyyy
                required: null
      espece:
        components:
          value:
            checker:
              name: Reference
              params:
                refType: especes
      Couleur des individus:
        components:
          value:
            checker:
              name: Reference
              params:
                refType: valeurs_qualitatives
          unit:
            defaultValue:
              expression: return "sans_unite"
            checker:
              name: Reference
              params:
                refType: unites
                required: null
      Nombre d'individus:
        components:
          value:
            defaultValue:
              expression: return 0
            checker:
              name: Integer
              params:
                required: null
          unit:
            defaultValue:
              expression: return "sans_unite"
            checker:
              name: Reference
              params:
                refType: unites
                required: null
    validations:
      unitOfColor:
        internationalizationName:
          fr: vérifie l'unité de la couleur des individus
        checker:
          name: GroovyExpression
          params:
            groovy:
              expression: >
                String datatype = "piegeage_en_montee"; String variable =
                "Couleur des individus"; String codeVariable =
                "couleur_des_individus"; String component = "unit"; return
                referencesValues.get("variables_et_unites_par_types_de_donnees")
                .findAll{it.get("nom du type de données").equals(datatype)}
                .find{it.get("nom de la variable").equals(codeVariable)}
                .get("nom de
                l'unité").equals(datum.get(variable).get(component));
              references:
                - variables_et_unites_par_types_de_donnees
      unitOfIndividus:
        internationalizationName:
          fr: vérifie l'unité du nombre d'individus
        checker:
          name: GroovyExpression
          params:
            groovy:
              expression: >
                String datatype = "piegeage_en_montee"; String variable =
                "Nombre d'individus"; String codeVariable =
                "nombre_d_individus"; String component = "unit"; return
                referencesValues.get("variables_et_unites_par_types_de_donnees")
                .findAll{it.get("nom du type de données").equals(datatype)}
                .find{it.get("nom de la variable").equals(codeVariable)}
                .get("nom de
                l'unité").equals(datum.get(variable).get(component));
              references:
                - variables_et_unites_par_types_de_donnees
    format:
      headerLine: 4
      firstRowLine: 5
      columns:
        - header: projet
          boundTo:
            variable: projet
            component: value
        - header: site
          boundTo:
            variable: site
            component: bassin
        - header: plateforme
          boundTo:
            variable: site
            component: plateforme
        - header: date
          boundTo:
            variable: date
            component: value
        - header: espece
          boundTo:
            variable: espece
            component: value
        - header: Couleur des individus
          boundTo:
            variable: Couleur des individus
            component: value
        - header: Nombre d'individus
          boundTo:
            variable: Nombre d'individus
            component: value
    authorization:
      authorizationScopes:
        projet:
          internationalizationName:
            fr: Projet
            en: Project
          variable: projet
          component: value
        localization:
          internationalizationName:
            fr: Localisation
            en: Localization
          variable: site
          component: chemin
      timeScope:
        variable: date
        component: value
      dataGroups:
        referentiel:
          internationalizationName:
            fr: Référentiels
            en: Repositories
          label: Référentiel
          data:
            - projet
            - site
            - date
            - espece
        qualitatif:
          internationalizationName:
            fr: Qualitatif
            en: Qualitative
          label: Données qualitatives
          data:
            - Couleur des individus
        quantitatif:
          internationalizationName:
            fr: Quantitatif
            en: Quantitative
          label: Données quantitatives
          data:
            - Nombre d'individus
    uniqueness:
      - variable: projet
        component: value
      - variable: site
        component: chemin
      - variable: date
        component: value
      - variable: espece
        component: value