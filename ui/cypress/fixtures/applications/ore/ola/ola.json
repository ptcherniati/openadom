{
  "id": "36776c27-acf3-4981-a977-7c3c37be0183",
  "name": "ola",
  "title": "ola",
  "comment": "",
  "internationalization": {
    "application": {
      "internationalizationName": {
        "en": "ORE OLA",
        "fr": "ORE OLA"
      }
    },
    "references": {
      "controle_coherence": {
        "internationalizationName": {
          "en": "Controle de la cohérence",
          "fr": "Controle de la cohérence"
        },
        "internationalizedColumns": null,
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": null,
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "taxon_phytoplancton": {
        "internationalizationName": {
          "en": "taxon's phytoplanctons",
          "fr": "taxon des phytoplanctons"
        },
        "internationalizedColumns": null,
        "internationalizedDynamicColumns": {
          "proprietes_taxon": {
            "en": "Properties of Taxa",
            "fr": "Proprétés de Taxons"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom du niveau de taxon}: {nom du taxon superieur}.{nom du taxon déterminé}",
            "fr": "{nom du niveau de taxon}: {nom du taxon superieur}.{nom du taxon déterminé}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "site_type": {
        "internationalizationName": {
          "en": "Sites types",
          "fr": "Types de site"
        },
        "internationalizedColumns": {
          "nom_key": {
            "en": "nom_en",
            "fr": "nom_fr"
          },
          "description_fr": {
            "en": "description_en",
            "fr": "description_fr"
          }
        },
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom_key}",
            "fr": "{nom_key}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "data_type_site_theme_project": {
        "internationalizationName": {
          "en": "Data type for theme's site and project",
          "fr": "Type de données par thème de sites et projet"
        },
        "internationalizedColumns": null,
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": null,
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "stade_développement_zoo": {
        "internationalizationName": {
          "en": "Stage of development",
          "fr": "Stade de développement"
        },
        "internationalizedColumns": {
          "nom_key": {
            "en": "nom_en",
            "fr": "nom_fr"
          },
          "description_fr": {
            "en": "description_en",
            "fr": "description_fr"
          }
        },
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom_key}",
            "fr": "{nom_key}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "project": {
        "internationalizationName": {
          "en": "Project",
          "fr": "Projet"
        },
        "internationalizedColumns": {
          "nom du projet_key": {
            "en": "nom du projet_en",
            "fr": "nom du projet_fr"
          },
          "description du projet_fr": {
            "en": "description du projet_en",
            "fr": "description du projet_fr"
          }
        },
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom du projet_key}",
            "fr": "{nom du projet_key}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "ref_site": {
        "internationalizationName": {
          "en": "Site",
          "fr": "Site"
        },
        "internationalizedColumns": {
          "nom du site_key": {
            "en": "nom du site_en",
            "fr": "nom du site_fr"
          },
          "description du site_fr": {
            "en": "description du site_en",
            "fr": "description du site_fr"
          }
        },
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom du site_key}",
            "fr": "{nom du site_key}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "valeurs_qualitative": {
        "internationalizationName": {
          "en": "Qualitative values",
          "fr": "Valeurs qualitatives"
        },
        "internationalizedColumns": {
          "nom_key": {
            "en": "nom_en",
            "fr": "nom_fr"
          },
          "valeur_key": {
            "en": "valeur_en",
            "fr": "valeur_fr"
          }
        },
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{valeur_key}",
            "fr": "{valeur_key}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "variable_norm": {
        "internationalizationName": {
          "en": "Variables' norms",
          "fr": "Normes de variable"
        },
        "internationalizedColumns": null,
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom}",
            "fr": "{nom}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "ref_variable": {
        "internationalizationName": {
          "en": "Variables",
          "fr": "Variables"
        },
        "internationalizedColumns": {
          "définition_fr": {
            "en": "définition_en",
            "fr": "définition_fr"
          },
          "nom de la variable_fr": {
            "en": "Affichage de la variable_en",
            "fr": "Affichage de la variable_fr"
          }
        },
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom de la variable_fr}",
            "fr": "{nom de la variable_fr}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "propriete_taxon": {
        "internationalizationName": {
          "en": "Proporties of taxons",
          "fr": "Propiétés des taxons"
        },
        "internationalizedColumns": {
          "définition_fr": {
            "en": "définition_en",
            "fr": "définition_fr"
          },
          "nom de la propriété_key": {
            "en": "nom de la propriété_en",
            "fr": "nom de la propriété_fr"
          }
        },
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom de la propriété_key}",
            "fr": "{nom de la propriété_key}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "project_site": {
        "internationalizationName": {
          "en": "Project on site",
          "fr": "Projet par site"
        },
        "internationalizedColumns": null,
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": null,
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "tool": {
        "internationalizationName": {
          "en": "Measuring tool",
          "fr": "Outils de mesure"
        },
        "internationalizedColumns": {
          "description_fr": {
            "en": "description_en",
            "fr": "description_fr"
          },
          "nom de l'outil de mesure_fr": {
            "en": "nom de l'outil de mesure_en",
            "fr": "nom de l'outil de mesure_fr"
          }
        },
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom de l'outil de mesure_fr}",
            "fr": "{nom de l'outil de mesure_fr}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "platform": {
        "internationalizationName": {
          "en": "Plateforms",
          "fr": "Plateformes"
        },
        "internationalizedColumns": {
          "nom de la plateforme_key": {
            "en": "nom de la plateforme_en",
            "fr": "nom de la plateforme_fr"
          }
        },
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom de la plateforme_key}",
            "fr": "{nom de la plateforme_key}"
          }
        },
        "internationalizedValidations": {
          "format_float": {
            "fr": "latitude, longitude, altitude au format flottant obligatoire"
          }
        },
        "internationalizedTags": null
      },
      "unit": {
        "internationalizationName": {
          "en": "Units",
          "fr": "Unités"
        },
        "internationalizedColumns": {
          "nom_key": {
            "en": "nom_en",
            "fr": "nom_fr"
          }
        },
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom_key} ({code})",
            "fr": "{nom_key} ({code})"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "tool_type": {
        "internationalizationName": {
          "en": "Tools type",
          "fr": "Type d'outils"
        },
        "internationalizedColumns": null,
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom du type d'outils}",
            "fr": "{nom du type d'outils}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "platform_type": {
        "internationalizationName": {
          "en": "Plateform types",
          "fr": "Types de plateforme"
        },
        "internationalizedColumns": {
          "description_fr": {
            "en": "description_en",
            "fr": "description_fr"
          },
          "nom du type de plateforme_key": {
            "en": "nom du type de plateforme_en",
            "fr": "nom du type de plateforme_fr"
          }
        },
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom du type de plateforme_key}",
            "fr": "{nom du type de plateforme_key}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "file_type": {
        "internationalizationName": {
          "en": "Type's Files",
          "fr": "Type de fichier"
        },
        "internationalizedColumns": null,
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom}",
            "fr": "{nom}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "data_type": {
        "internationalizationName": {
          "en": "Data type",
          "fr": "Types de données"
        },
        "internationalizedColumns": {
          "nom_key": {
            "en": "nom_en",
            "fr": "nom_fr"
          },
          "description_fr": {
            "en": "description_en",
            "fr": "description_fr"
          }
        },
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom_key}",
            "fr": "{nom_key}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "niveau_taxon": {
        "internationalizationName": {
          "en": "Level of taxon",
          "fr": "Niveau de taxon"
        },
        "internationalizedColumns": {
          "nom_key": {
            "en": "nom_en",
            "fr": "nom_fr"
          }
        },
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom_key}",
            "fr": "{nom_key}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "variable_group": {
        "internationalizationName": {
          "en": "Variable's groups",
          "fr": "Groupes de variable"
        },
        "internationalizedColumns": {
          "nom du groupe": {
            "en": "nom du groupe_en",
            "fr": "nom du groupe_fr"
          }
        },
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom du groupe_en}",
            "fr": "{nom du groupe_fr}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "taxon_zooplancton": {
        "internationalizationName": {
          "en": "taxon's zooplancton",
          "fr": "taxon des zooplancton"
        },
        "internationalizedColumns": null,
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom du taxon superieur}.{nom du taxon déterminé}({nom du niveau de taxon})",
            "fr": "{nom du taxon superieur}.{nom du taxon déterminé}({nom du niveau de taxon})"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      },
      "thematic": {
        "internationalizationName": {
          "en": "Thematic",
          "fr": "Thème"
        },
        "internationalizedColumns": {
          "nom_key": {
            "en": "nom_en",
            "fr": "nom_fr"
          },
          "description_fr": {
            "en": "description_en",
            "fr": "description_fr"
          }
        },
        "internationalizedDynamicColumns": {},
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom_key}",
            "fr": "{nom_key}"
          }
        },
        "internationalizedValidations": {},
        "internationalizedTags": null
      }
    },
    "dataTypes": {
      "phytoplancton": {
        "internationalizationName": {
          "en": "Phytoplancton",
          "fr": "Phytoplancton"
        },
        "internationalizedColumns": null,
        "authorization": {
          "dataGroups": {
            "condition": {
              "internationalizationName": {
                "en": "Context",
                "fr": "Contexte"
              }
            },
            "referentiel": {
              "internationalizationName": {
                "en": "Referential",
                "fr": "Référentiel"
              }
            },
            "donnee": {
              "internationalizationName": {
                "en": "Data",
                "fr": "Donnée"
              }
            }
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": null
            },
            "projet": {
              "internationalizationName": null
            }
          },
          "columnsDescription": {
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              }
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              }
            },
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              }
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              }
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              }
            }
          }
        },
        "internationalizationDisplay": null,
        "internationalizedValidations": {}
      },
      "condition_prelevements": {
        "internationalizationName": {
          "en": "Collection condition",
          "fr": "Condition de prélèvement"
        },
        "internationalizedColumns": null,
        "authorization": {
          "dataGroups": {
            "referentiel": {
              "internationalizationName": {
                "en": "Referential",
                "fr": "Référentiel"
              }
            },
            "qualitatif": {
              "internationalizationName": {
                "en": "Qualitative data",
                "fr": "Données qualitatives"
              }
            },
            "quantitatif": {
              "internationalizationName": {
                "en": "Quantitative data",
                "fr": "Données quantitatives"
              }
            }
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": {
                "en": "Site",
                "fr": "Site"
              }
            },
            "projet": {
              "internationalizationName": {
                "en": "Project",
                "fr": "Projet"
              }
            }
          },
          "columnsDescription": {
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              }
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              }
            },
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              }
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              }
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              }
            }
          }
        },
        "internationalizationDisplay": null,
        "internationalizedValidations": {}
      },
      "chlorophylle": {
        "internationalizationName": {
          "en": null,
          "fr": "Chlorophylle"
        },
        "internationalizedColumns": null,
        "authorization": {
          "dataGroups": {
            "condition": {
              "internationalizationName": {
                "en": "Context",
                "fr": "Contexte"
              }
            },
            "referentiel": {
              "internationalizationName": {
                "en": "Referential",
                "fr": "Référentiel"
              }
            }
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": null
            },
            "projet": {
              "internationalizationName": null
            }
          },
          "columnsDescription": {
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              }
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              }
            },
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              }
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              }
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              }
            }
          }
        },
        "internationalizationDisplay": null,
        "internationalizedValidations": {}
      },
      "haute_frequence": {
        "internationalizationName": {
          "en": null,
          "fr": "Haute Fréquence"
        },
        "internationalizedColumns": null,
        "authorization": {
          "dataGroups": {
            "all": {
              "internationalizationName": null
            }
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": null
            },
            "projet": {
              "internationalizationName": null
            }
          },
          "columnsDescription": {
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              }
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              }
            },
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              }
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              }
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              }
            }
          }
        },
        "internationalizationDisplay": null,
        "internationalizedValidations": {}
      },
      "production_primaire": {
        "internationalizationName": {
          "en": null,
          "fr": "Production primaire"
        },
        "internationalizedColumns": null,
        "authorization": {
          "dataGroups": {
            "condition": {
              "internationalizationName": {
                "en": "Context",
                "fr": "Contexte"
              }
            },
            "referentiel": {
              "internationalizationName": {
                "en": "Referential",
                "fr": "Référentiel"
              }
            }
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": null
            },
            "projet": {
              "internationalizationName": null
            }
          },
          "columnsDescription": {
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              }
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              }
            },
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              }
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              }
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              }
            }
          }
        },
        "internationalizationDisplay": null,
        "internationalizedValidations": {}
      },
      "zooplancton": {
        "internationalizationName": {
          "en": "Zooplancton",
          "fr": "Zooplancton"
        },
        "internationalizedColumns": null,
        "authorization": {
          "dataGroups": {
            "condition": {
              "internationalizationName": {
                "en": "Context",
                "fr": "Contexte"
              }
            },
            "donnée": {
              "internationalizationName": {
                "en": "Donnée",
                "fr": "Donnée"
              }
            },
            "referentiel": {
              "internationalizationName": {
                "en": "Referential",
                "fr": "Référentiel"
              }
            }
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": null
            },
            "projet": {
              "internationalizationName": null
            }
          },
          "columnsDescription": {
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              }
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              }
            },
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              }
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              }
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              }
            }
          }
        },
        "internationalizationDisplay": null,
        "internationalizedValidations": {}
      },
      "physico-chimie": {
        "internationalizationName": {
          "en": "Chemical Physics",
          "fr": "Physico Chimie"
        },
        "internationalizedColumns": null,
        "authorization": {
          "dataGroups": {
            "condition": {
              "internationalizationName": {
                "en": "Context",
                "fr": "Contexte"
              }
            },
            "referentiel": {
              "internationalizationName": {
                "en": "Referential",
                "fr": "Référentiel"
              }
            },
            "dataGroup_variable": {
              "internationalizationName": {
                "en": "Data",
                "fr": "Données"
              }
            }
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": null
            },
            "projet": {
              "internationalizationName": null
            }
          },
          "columnsDescription": {
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              }
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              }
            },
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              }
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              }
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              }
            }
          }
        },
        "internationalizationDisplay": null,
        "internationalizedValidations": {}
      },
      "sonde_multiparametres": {
        "internationalizationName": {
          "en": "Probe data",
          "fr": "Sonde multi-paramètres"
        },
        "internationalizedColumns": null,
        "authorization": {
          "dataGroups": {
            "referentiel": {
              "internationalizationName": {
                "en": "Referential",
                "fr": "Référentiel"
              }
            },
            "condition_prelevement": {
              "internationalizationName": {
                "en": "Prelevement's condition",
                "fr": "Condition de prélèvement"
              }
            },
            "donnee_prelevement": {
              "internationalizationName": {
                "en": "Data's condition",
                "fr": "Données du prélèvement"
              }
            }
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": null
            },
            "projet": {
              "internationalizationName": null
            }
          },
          "columnsDescription": {
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              }
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              }
            },
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              }
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              }
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              }
            }
          }
        },
        "internationalizationDisplay": null,
        "internationalizedValidations": {}
      }
    },
    "internationalizedTags": {},
    "rightsRequest": null
  },
  "references": {},
  "authorizationReferencesRights": {
    "authorizations": {},
    "applicationName": "ola",
    "isAdministrator": false,
    "userId": null
  },
  "referenceSynthesis": [],
  "dataTypes": {
    "zooplancton": {
      "id": "zooplancton",
      "label": "zooplancton",
      "variables": {
        "date": {
          "id": "date",
          "label": "date",
          "components": {
            "day": {
              "id": "day",
              "label": "day"
            }
          },
          "chartDescription": null
        },
        "site": {
          "id": "site",
          "label": "site",
          "components": {
            "nom du site": {
              "id": "nom du site",
              "label": "nom du site"
            }
          },
          "chartDescription": null
        },
        "outil": {
          "id": "outil",
          "label": "outil",
          "components": {
            "mesure": {
              "id": "mesure",
              "label": "mesure"
            },
            "prelevement": {
              "id": "prelevement",
              "label": "prelevement"
            }
          },
          "chartDescription": null
        },
        "taxon": {
          "id": "taxon",
          "label": "taxon",
          "components": {
            "nom du determinateur": {
              "id": "nom du determinateur",
              "label": "nom du determinateur"
            },
            "stade de développement": {
              "id": "stade de développement",
              "label": "stade de développement"
            },
            "nom du taxon déterminé": {
              "id": "nom du taxon déterminé",
              "label": "nom du taxon déterminé"
            }
          },
          "chartDescription": null
        },
        "projet": {
          "id": "projet",
          "label": "projet",
          "components": {
            "nom du projet": {
              "id": "nom du projet",
              "label": "nom du projet"
            }
          },
          "chartDescription": null
        },
        "plateforme": {
          "id": "plateforme",
          "label": "plateforme",
          "components": {
            "nom de la plateforme": {
              "id": "nom de la plateforme",
              "label": "nom de la plateforme"
            }
          },
          "chartDescription": null
        },
        "profondeur": {
          "id": "profondeur",
          "label": "profondeur",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "maximum": {
              "id": "maximum",
              "label": "maximum"
            },
            "minimum": {
              "id": "minimum",
              "label": "minimum"
            }
          },
          "chartDescription": null
        },
        "nombre_individus": {
          "id": "nombre_individus",
          "label": "nombre_individus",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "biovolume sédimenté": {
          "id": "biovolume sédimenté",
          "label": "biovolume sédimenté",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        }
      },
      "repository": {
        "filePattern": "(.*)!(.*)_zooplancton_(.*)_(.*).csv",
        "authorizationScope": {
          "site": 2,
          "projet": 1
        },
        "startDate": {
          "token": 3
        },
        "endDate": {
          "token": 4
        }
      },
      "hasAuthorizations": true,
      "tags": [
        "no-tag"
      ]
    },
    "chlorophylle": {
      "id": "chlorophylle",
      "label": "chlorophylle",
      "variables": {
        "date": {
          "id": "date",
          "label": "date",
          "components": {
            "day": {
              "id": "day",
              "label": "day"
            }
          },
          "chartDescription": null
        },
        "site": {
          "id": "site",
          "label": "site",
          "components": {
            "nom du site": {
              "id": "nom du site",
              "label": "nom du site"
            }
          },
          "chartDescription": null
        },
        "projet": {
          "id": "projet",
          "label": "projet",
          "components": {
            "nom du projet": {
              "id": "nom du projet",
              "label": "nom du projet"
            }
          },
          "chartDescription": null
        },
        "plateforme": {
          "id": "plateforme",
          "label": "plateforme",
          "components": {
            "nom de la plateforme": {
              "id": "nom de la plateforme",
              "label": "nom de la plateforme"
            }
          },
          "chartDescription": null
        },
        "profondeur": {
          "id": "profondeur",
          "label": "profondeur",
          "components": {
            "unit": {
              "id": "unit",
              "label": "unit"
            },
            "maximum": {
              "id": "maximum",
              "label": "maximum"
            },
            "minimum": {
              "id": "minimum",
              "label": "minimum"
            }
          },
          "chartDescription": null
        },
        "chlorophylle": {
          "id": "chlorophylle",
          "label": "chlorophylle",
          "components": {
            "c": {
              "id": "c",
              "label": "c"
            },
            "unit": {
              "id": "unit",
              "label": "unit"
            },
            "carotenoïde": {
              "id": "carotenoïde",
              "label": "carotenoïde"
            },
            "pheopigments": {
              "id": "pheopigments",
              "label": "pheopigments"
            },
            "a scor-unesco": {
              "id": "a scor-unesco",
              "label": "a scor-unesco"
            },
            "a strickland-parsons": {
              "id": "a strickland-parsons",
              "label": "a strickland-parsons"
            }
          },
          "chartDescription": null
        }
      },
      "repository": {
        "filePattern": "(.*)!(.*)_chlorophylle_(.*)_(.*).csv",
        "authorizationScope": {
          "site": 2,
          "projet": 1
        },
        "startDate": {
          "token": 3
        },
        "endDate": {
          "token": 4
        }
      },
      "hasAuthorizations": true,
      "tags": [
        "no-tag"
      ]
    },
    "phytoplancton": {
      "id": "phytoplancton",
      "label": "phytoplancton",
      "variables": {
        "date": {
          "id": "date",
          "label": "date",
          "components": {
            "day": {
              "id": "day",
              "label": "day"
            }
          },
          "chartDescription": null
        },
        "site": {
          "id": "site",
          "label": "site",
          "components": {
            "nom du site": {
              "id": "nom du site",
              "label": "nom du site"
            }
          },
          "chartDescription": null
        },
        "outil": {
          "id": "outil",
          "label": "outil",
          "components": {
            "mesure": {
              "id": "mesure",
              "label": "mesure"
            },
            "prelevement": {
              "id": "prelevement",
              "label": "prelevement"
            }
          },
          "chartDescription": null
        },
        "taxon": {
          "id": "taxon",
          "label": "taxon",
          "components": {
            "nom du determinateur": {
              "id": "nom du determinateur",
              "label": "nom du determinateur"
            },
            "nom du taxon déterminé": {
              "id": "nom du taxon déterminé",
              "label": "nom du taxon déterminé"
            }
          },
          "chartDescription": null
        },
        "projet": {
          "id": "projet",
          "label": "projet",
          "components": {
            "nom du projet": {
              "id": "nom du projet",
              "label": "nom du projet"
            }
          },
          "chartDescription": null
        },
        "plateforme": {
          "id": "plateforme",
          "label": "plateforme",
          "components": {
            "nom de la plateforme": {
              "id": "nom de la plateforme",
              "label": "nom de la plateforme"
            }
          },
          "chartDescription": null
        },
        "profondeur": {
          "id": "profondeur",
          "label": "profondeur",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "maximum": {
              "id": "maximum",
              "label": "maximum"
            },
            "minimum": {
              "id": "minimum",
              "label": "minimum"
            }
          },
          "chartDescription": null
        },
        "volume sedimente": {
          "id": "volume sedimente",
          "label": "volume sedimente",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "surface de comptage": {
          "id": "surface de comptage",
          "label": "surface de comptage",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "nombre d'objets par ml": {
          "id": "nombre d'objets par ml",
          "label": "nombre d'objets par ml",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "nombre d'objets comptés": {
          "id": "nombre d'objets comptés",
          "label": "nombre d'objets comptés",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "nombre de cellules par ml": {
          "id": "nombre de cellules par ml",
          "label": "nombre de cellules par ml",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "nombre de champs comptés": {
          "id": "nombre de champs comptés",
          "label": "nombre de champs comptés",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "biovolume de l'espèce dans l'échantillon": {
          "id": "biovolume de l'espèce dans l'échantillon",
          "label": "biovolume de l'espèce dans l'échantillon",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        }
      },
      "repository": {
        "filePattern": "(.*)!(.*)_phytoplancton_(.*)_(.*).csv",
        "authorizationScope": {
          "site": 2,
          "projet": 1
        },
        "startDate": {
          "token": 3
        },
        "endDate": {
          "token": 4
        }
      },
      "hasAuthorizations": true,
      "tags": [
        "no-tag"
      ]
    },
    "physico-chimie": {
      "id": "physico-chimie",
      "label": "physico-chimie",
      "variables": {
        "date": {
          "id": "date",
          "label": "date",
          "components": {
            "day": {
              "id": "day",
              "label": "day"
            }
          },
          "chartDescription": null
        },
        "site": {
          "id": "site",
          "label": "site",
          "components": {
            "nom du site": {
              "id": "nom du site",
              "label": "nom du site"
            }
          },
          "chartDescription": null
        },
        "outil": {
          "id": "outil",
          "label": "outil",
          "components": {
            "prélèvement": {
              "id": "prélèvement",
              "label": "prélèvement"
            }
          },
          "chartDescription": null
        },
        "projet": {
          "id": "projet",
          "label": "projet",
          "components": {
            "nom du projet": {
              "id": "nom du projet",
              "label": "nom du projet"
            }
          },
          "chartDescription": null
        },
        "plateforme": {
          "id": "plateforme",
          "label": "plateforme",
          "components": {
            "nom de la plateforme": {
              "id": "nom de la plateforme",
              "label": "nom de la plateforme"
            }
          },
          "chartDescription": null
        },
        "profondeur": {
          "id": "profondeur",
          "label": "profondeur",
          "components": {
            "unité": {
              "id": "unité",
              "label": "unité"
            },
            "maximum": {
              "id": "maximum",
              "label": "maximum"
            },
            "minimum": {
              "id": "minimum",
              "label": "minimum"
            },
            "réelle": {
              "id": "réelle",
              "label": "réelle"
            }
          },
          "chartDescription": null
        },
        "data_variable": {
          "id": "data_variable",
          "label": "data_variable",
          "components": {
            "nom": {
              "id": "nom",
              "label": "nom"
            },
            "unit": {
              "id": "unit",
              "label": "unit"
            },
            "values": {
              "id": "values",
              "label": "values"
            }
          },
          "chartDescription": {
            "value": "values",
            "unit": "unit",
            "gap": "1 DAY",
            "standardDeviation": null,
            "aggregation": {
              "variable": "data_variable",
              "component": "nom",
              "id": "data_variable_nom",
              "type": "PARAM_VARIABLE_COMPONENT_KEY"
            }
          }
        }
      },
      "repository": {
        "filePattern": "(.*)!(.*)_physico_chimie_(.*)_(.*).csv",
        "authorizationScope": {
          "site": 2,
          "projet": 1
        },
        "startDate": {
          "token": 3
        },
        "endDate": {
          "token": 4
        }
      },
      "hasAuthorizations": true,
      "tags": [
        "no-tag"
      ]
    },
    "haute_frequence": {
      "id": "haute_frequence",
      "label": "haute_frequence",
      "variables": {
        "date": {
          "id": "date",
          "label": "date",
          "components": {
            "day": {
              "id": "day",
              "label": "day"
            },
            "time": {
              "id": "time",
              "label": "time"
            },
            "datetime": {
              "id": "datetime",
              "label": "datetime"
            }
          },
          "chartDescription": null
        },
        "site": {
          "id": "site",
          "label": "site",
          "components": {
            "nom du site": {
              "id": "nom du site",
              "label": "nom du site"
            }
          },
          "chartDescription": null
        },
        "outil": {
          "id": "outil",
          "label": "outil",
          "components": {
            "mesure": {
              "id": "mesure",
              "label": "mesure"
            }
          },
          "chartDescription": null
        },
        "projet": {
          "id": "projet",
          "label": "projet",
          "components": {
            "nom du projet": {
              "id": "nom du projet",
              "label": "nom du projet"
            }
          },
          "chartDescription": null
        },
        "pression": {
          "id": "pression",
          "label": "pression",
          "components": {
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "plateforme": {
          "id": "plateforme",
          "label": "plateforme",
          "components": {
            "nom de la plateforme": {
              "id": "nom de la plateforme",
              "label": "nom de la plateforme"
            }
          },
          "chartDescription": null
        },
        "profondeur": {
          "id": "profondeur",
          "label": "profondeur",
          "components": {
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "commentaire": {
          "id": "commentaire",
          "label": "commentaire",
          "components": {
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "temperature": {
          "id": "temperature",
          "label": "temperature",
          "components": {
            "value": {
              "id": "value",
              "label": "value"
            },
            "quality": {
              "id": "quality",
              "label": "quality"
            }
          },
          "chartDescription": null
        }
      },
      "repository": {
        "filePattern": "(.*)!(.*)_haute_frequence_(.*)_(.*).csv",
        "authorizationScope": {
          "site": 2,
          "projet": 1
        },
        "startDate": {
          "token": 3
        },
        "endDate": {
          "token": 4
        }
      },
      "hasAuthorizations": true,
      "tags": [
        "no-tag"
      ]
    },
    "production_primaire": {
      "id": "production_primaire",
      "label": "production_primaire",
      "variables": {
        "date": {
          "id": "date",
          "label": "date",
          "components": {
            "day": {
              "id": "day",
              "label": "day"
            }
          },
          "chartDescription": null
        },
        "site": {
          "id": "site",
          "label": "site",
          "components": {
            "nom du site": {
              "id": "nom du site",
              "label": "nom du site"
            }
          },
          "chartDescription": null
        },
        "projet": {
          "id": "projet",
          "label": "projet",
          "components": {
            "nom du projet": {
              "id": "nom du projet",
              "label": "nom du projet"
            }
          },
          "chartDescription": null
        },
        "incubation": {
          "id": "incubation",
          "label": "incubation",
          "components": {
            "duree": {
              "id": "duree",
              "label": "duree"
            },
            "heure fin": {
              "id": "heure fin",
              "label": "heure fin"
            },
            "heure debut": {
              "id": "heure debut",
              "label": "heure debut"
            }
          },
          "chartDescription": null
        },
        "plateforme": {
          "id": "plateforme",
          "label": "plateforme",
          "components": {
            "nom de la plateforme": {
              "id": "nom de la plateforme",
              "label": "nom de la plateforme"
            }
          },
          "chartDescription": null
        },
        "profondeur": {
          "id": "profondeur",
          "label": "profondeur",
          "components": {
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "production primaire": {
          "id": "production primaire",
          "label": "production primaire",
          "components": {
            "heure": {
              "id": "heure",
              "label": "heure"
            },
            "tiers median": {
              "id": "tiers median",
              "label": "tiers median"
            },
            "duree d_incubation reelle": {
              "id": "duree d_incubation reelle",
              "label": "duree d_incubation reelle"
            }
          },
          "chartDescription": null
        }
      },
      "repository": {
        "filePattern": "(.*)!(.*)_production_primaire_(.*)_(.*).csv",
        "authorizationScope": {
          "site": 2,
          "projet": 1
        },
        "startDate": {
          "token": 3
        },
        "endDate": {
          "token": 4
        }
      },
      "hasAuthorizations": true,
      "tags": [
        "no-tag"
      ]
    },
    "sonde_multiparametres": {
      "id": "sonde_multiparametres",
      "label": "sonde_multiparametres",
      "variables": {
        "ph": {
          "id": "ph",
          "label": "ph",
          "components": {
            "tc": {
              "id": "tc",
              "label": "tc"
            },
            "brut": {
              "id": "brut",
              "label": "brut"
            },
            "unite": {
              "id": "unite",
              "label": "unite"
            }
          },
          "chartDescription": {
            "value": "tc",
            "unit": "unit",
            "gap": "1 DAY",
            "standardDeviation": null,
            "aggregation": null
          }
        },
        "chl": {
          "id": "chl",
          "label": "chl",
          "components": {
            "a": {
              "id": "a",
              "label": "a"
            },
            "unite": {
              "id": "unite",
              "label": "unite"
            }
          },
          "chartDescription": {
            "value": "a",
            "unit": "unit",
            "gap": "1 DAY",
            "standardDeviation": null,
            "aggregation": null
          }
        },
        "date": {
          "id": "date",
          "label": "date",
          "components": {
            "day": {
              "id": "day",
              "label": "day"
            },
            "time": {
              "id": "time",
              "label": "time"
            }
          },
          "chartDescription": null
        },
        "site": {
          "id": "site",
          "label": "site",
          "components": {
            "nom du site": {
              "id": "nom du site",
              "label": "nom du site"
            }
          },
          "chartDescription": null
        },
        "outil": {
          "id": "outil",
          "label": "outil",
          "components": {
            "prélèvement": {
              "id": "prélèvement",
              "label": "prélèvement"
            }
          },
          "chartDescription": null
        },
        "par_a": {
          "id": "par_a",
          "label": "par_a",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": {
            "value": "value",
            "unit": "unit",
            "gap": "1 DAY",
            "standardDeviation": null,
            "aggregation": null
          }
        },
        "par_w": {
          "id": "par_w",
          "label": "par_w",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": {
            "value": "value",
            "unit": "unit",
            "gap": "1 DAY",
            "standardDeviation": null,
            "aggregation": null
          }
        },
        "trans": {
          "id": "trans",
          "label": "trans",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": {
            "value": "value",
            "unit": "unit",
            "gap": "1 DAY",
            "standardDeviation": null,
            "aggregation": null
          }
        },
        "cond25": {
          "id": "cond25",
          "label": "cond25",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "degres": {
              "id": "degres",
              "label": "degres"
            }
          },
          "chartDescription": {
            "value": "degres",
            "unit": "unit",
            "gap": "1 DAY",
            "standardDeviation": null,
            "aggregation": null
          }
        },
        "projet": {
          "id": "projet",
          "label": "projet",
          "components": {
            "nom du projet": {
              "id": "nom du projet",
              "label": "nom du projet"
            }
          },
          "chartDescription": null
        },
        "turbidite": {
          "id": "turbidite",
          "label": "turbidite",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": {
            "value": "value",
            "unit": "unit",
            "gap": "1 DAY",
            "standardDeviation": null,
            "aggregation": null
          }
        },
        "oxygene_mg": {
          "id": "oxygene_mg",
          "label": "oxygene_mg",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": {
            "value": "value",
            "unit": "unit",
            "gap": "1 DAY",
            "standardDeviation": null,
            "aggregation": null
          }
        },
        "plateforme": {
          "id": "plateforme",
          "label": "plateforme",
          "components": {
            "nom de la plateforme": {
              "id": "nom de la plateforme",
              "label": "nom de la plateforme"
            }
          },
          "chartDescription": null
        },
        "profondeur": {
          "id": "profondeur",
          "label": "profondeur",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "commentaire": {
          "id": "commentaire",
          "label": "commentaire",
          "components": {
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "temperature": {
          "id": "temperature",
          "label": "temperature",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "oxygene_saturation": {
          "id": "oxygene_saturation",
          "label": "oxygene_saturation",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": {
            "value": "value",
            "unit": "unit",
            "gap": "1 DAY",
            "standardDeviation": null,
            "aggregation": null
          }
        }
      },
      "repository": {
        "filePattern": "(.*)!(.*)_sonde_multiparametres_(.*)_(.*).csv",
        "authorizationScope": {
          "site": 2,
          "projet": 1
        },
        "startDate": {
          "token": 3
        },
        "endDate": {
          "token": 4
        }
      },
      "hasAuthorizations": true,
      "tags": [
        "no-tag"
      ]
    },
    "condition_prelevements": {
      "id": "condition_prelevements",
      "label": "condition_prelevements",
      "variables": {
        "date": {
          "id": "date",
          "label": "date",
          "components": {
            "day": {
              "id": "day",
              "label": "day"
            },
            "time": {
              "id": "time",
              "label": "time"
            }
          },
          "chartDescription": null
        },
        "site": {
          "id": "site",
          "label": "site",
          "components": {
            "nom du site": {
              "id": "nom du site",
              "label": "nom du site"
            },
            "nom de la plateforme": {
              "id": "nom de la plateforme",
              "label": "nom de la plateforme"
            }
          },
          "chartDescription": null
        },
        "projet": {
          "id": "projet",
          "label": "projet",
          "components": {
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "commentaire": {
          "id": "commentaire",
          "label": "commentaire",
          "components": {
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        },
        "temperature": {
          "id": "temperature",
          "label": "temperature",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "temperature de l'air": {
              "id": "temperature de l'air",
              "label": "temperature de l'air"
            }
          },
          "chartDescription": null
        },
        "qualitatives": {
          "id": "qualitatives",
          "label": "qualitatives",
          "components": {
            "temps": {
              "id": "temps",
              "label": "temps"
            },
            "nebulosite": {
              "id": "nebulosite",
              "label": "nebulosite"
            },
            "ensoleillement": {
              "id": "ensoleillement",
              "label": "ensoleillement"
            },
            "aspect de l'eau": {
              "id": "aspect de l'eau",
              "label": "aspect de l'eau"
            },
            "etat de surface": {
              "id": "etat de surface",
              "label": "etat de surface"
            },
            "vitesse du vent": {
              "id": "vitesse du vent",
              "label": "vitesse du vent"
            },
            "couleur de l_eau": {
              "id": "couleur de l_eau",
              "label": "couleur de l_eau"
            },
            "direction du vent": {
              "id": "direction du vent",
              "label": "direction du vent"
            }
          },
          "chartDescription": null
        },
        "transparence": {
          "id": "transparence",
          "label": "transparence",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "transparence par secchi": {
              "id": "transparence par secchi",
              "label": "transparence par secchi"
            },
            "transparence par disque inra": {
              "id": "transparence par disque inra",
              "label": "transparence par disque inra"
            }
          },
          "chartDescription": null
        },
        "pression_atmospherique": {
          "id": "pression_atmospherique",
          "label": "pression_atmospherique",
          "components": {
            "unite": {
              "id": "unite",
              "label": "unite"
            },
            "value": {
              "id": "value",
              "label": "value"
            }
          },
          "chartDescription": null
        }
      },
      "repository": {
        "filePattern": "(.*)!(.*)_conditions_prelevements_(.*)_(.*).csv",
        "authorizationScope": {
          "site": 2,
          "projet": 1
        },
        "startDate": {
          "token": 3
        },
        "endDate": {
          "token": 4
        }
      },
      "hasAuthorizations": true,
      "tags": [
        "no-tag"
      ]
    }
  },
  "authorizationsDatatypesRights": {
    "phytoplancton": {
      "ANY": true,
      "DOWNLOAD": true,
      "READ": true,
      "ADMIN": true,
      "DELETE": true,
      "UPLOAD": true,
      "PUBLICATION": true
    },
    "condition_prelevements": {
      "ANY": true,
      "DOWNLOAD": true,
      "READ": true,
      "ADMIN": true,
      "DELETE": true,
      "UPLOAD": true,
      "PUBLICATION": true
    },
    "chlorophylle": {
      "ANY": true,
      "DOWNLOAD": true,
      "READ": true,
      "ADMIN": true,
      "DELETE": true,
      "UPLOAD": true,
      "PUBLICATION": true
    },
    "haute_frequence": {
      "ANY": true,
      "DOWNLOAD": true,
      "READ": true,
      "ADMIN": true,
      "DELETE": true,
      "UPLOAD": true,
      "PUBLICATION": true
    },
    "production_primaire": {
      "ANY": true,
      "DOWNLOAD": true,
      "READ": true,
      "ADMIN": true,
      "DELETE": true,
      "UPLOAD": true,
      "PUBLICATION": true
    },
    "zooplancton": {
      "ANY": true,
      "DOWNLOAD": true,
      "READ": true,
      "ADMIN": true,
      "DELETE": true,
      "UPLOAD": true,
      "PUBLICATION": true
    },
    "physico-chimie": {
      "ANY": true,
      "DOWNLOAD": true,
      "READ": true,
      "ADMIN": true,
      "DELETE": true,
      "UPLOAD": true,
      "PUBLICATION": true
    },
    "sonde_multiparametres": {
      "ANY": true,
      "DOWNLOAD": true,
      "READ": true,
      "ADMIN": true,
      "DELETE": true,
      "UPLOAD": true,
      "PUBLICATION": true
    }
  },
  "rightsRequest": null,
  "configuration": {
    "requiredAuthorizationsAttributes": [
      "projet",
      "site"
    ],
    "version": 1,
    "internationalization": {
      "application": {
        "internationalizationName": {
          "en": "ORE OLA",
          "fr": "ORE OLA"
        }
      },
      "references": {
        "controle_coherence": {
          "internationalizationName": {
            "en": "Controle de la cohérence",
            "fr": "Controle de la cohérence"
          },
          "internationalizedColumns": null,
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": null,
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "taxon_phytoplancton": {
          "internationalizationName": {
            "en": "taxon's phytoplanctons",
            "fr": "taxon des phytoplanctons"
          },
          "internationalizedColumns": null,
          "internationalizedDynamicColumns": {
            "proprietes_taxon": {
              "en": "Properties of Taxa",
              "fr": "Proprétés de Taxons"
            }
          },
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom du niveau de taxon}: {nom du taxon superieur}.{nom du taxon déterminé}",
              "fr": "{nom du niveau de taxon}: {nom du taxon superieur}.{nom du taxon déterminé}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "site_type": {
          "internationalizationName": {
            "en": "Sites types",
            "fr": "Types de site"
          },
          "internationalizedColumns": {
            "nom_key": {
              "en": "nom_en",
              "fr": "nom_fr"
            },
            "description_fr": {
              "en": "description_en",
              "fr": "description_fr"
            }
          },
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom_key}",
              "fr": "{nom_key}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "data_type_site_theme_project": {
          "internationalizationName": {
            "en": "Data type for theme's site and project",
            "fr": "Type de données par thème de sites et projet"
          },
          "internationalizedColumns": null,
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": null,
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "stade_développement_zoo": {
          "internationalizationName": {
            "en": "Stage of development",
            "fr": "Stade de développement"
          },
          "internationalizedColumns": {
            "nom_key": {
              "en": "nom_en",
              "fr": "nom_fr"
            },
            "description_fr": {
              "en": "description_en",
              "fr": "description_fr"
            }
          },
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom_key}",
              "fr": "{nom_key}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "project": {
          "internationalizationName": {
            "en": "Project",
            "fr": "Projet"
          },
          "internationalizedColumns": {
            "nom du projet_key": {
              "en": "nom du projet_en",
              "fr": "nom du projet_fr"
            },
            "description du projet_fr": {
              "en": "description du projet_en",
              "fr": "description du projet_fr"
            }
          },
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom du projet_key}",
              "fr": "{nom du projet_key}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "ref_site": {
          "internationalizationName": {
            "en": "Site",
            "fr": "Site"
          },
          "internationalizedColumns": {
            "nom du site_key": {
              "en": "nom du site_en",
              "fr": "nom du site_fr"
            },
            "description du site_fr": {
              "en": "description du site_en",
              "fr": "description du site_fr"
            }
          },
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom du site_key}",
              "fr": "{nom du site_key}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "valeurs_qualitative": {
          "internationalizationName": {
            "en": "Qualitative values",
            "fr": "Valeurs qualitatives"
          },
          "internationalizedColumns": {
            "nom_key": {
              "en": "nom_en",
              "fr": "nom_fr"
            },
            "valeur_key": {
              "en": "valeur_en",
              "fr": "valeur_fr"
            }
          },
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{valeur_key}",
              "fr": "{valeur_key}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "variable_norm": {
          "internationalizationName": {
            "en": "Variables' norms",
            "fr": "Normes de variable"
          },
          "internationalizedColumns": null,
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom}",
              "fr": "{nom}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "ref_variable": {
          "internationalizationName": {
            "en": "Variables",
            "fr": "Variables"
          },
          "internationalizedColumns": {
            "définition_fr": {
              "en": "définition_en",
              "fr": "définition_fr"
            },
            "nom de la variable_fr": {
              "en": "Affichage de la variable_en",
              "fr": "Affichage de la variable_fr"
            }
          },
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom de la variable_fr}",
              "fr": "{nom de la variable_fr}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "propriete_taxon": {
          "internationalizationName": {
            "en": "Proporties of taxons",
            "fr": "Propiétés des taxons"
          },
          "internationalizedColumns": {
            "définition_fr": {
              "en": "définition_en",
              "fr": "définition_fr"
            },
            "nom de la propriété_key": {
              "en": "nom de la propriété_en",
              "fr": "nom de la propriété_fr"
            }
          },
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom de la propriété_key}",
              "fr": "{nom de la propriété_key}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "project_site": {
          "internationalizationName": {
            "en": "Project on site",
            "fr": "Projet par site"
          },
          "internationalizedColumns": null,
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": null,
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "tool": {
          "internationalizationName": {
            "en": "Measuring tool",
            "fr": "Outils de mesure"
          },
          "internationalizedColumns": {
            "description_fr": {
              "en": "description_en",
              "fr": "description_fr"
            },
            "nom de l'outil de mesure_fr": {
              "en": "nom de l'outil de mesure_en",
              "fr": "nom de l'outil de mesure_fr"
            }
          },
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom de l'outil de mesure_fr}",
              "fr": "{nom de l'outil de mesure_fr}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "platform": {
          "internationalizationName": {
            "en": "Plateforms",
            "fr": "Plateformes"
          },
          "internationalizedColumns": {
            "nom de la plateforme_key": {
              "en": "nom de la plateforme_en",
              "fr": "nom de la plateforme_fr"
            }
          },
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom de la plateforme_key}",
              "fr": "{nom de la plateforme_key}"
            }
          },
          "internationalizedValidations": {
            "format_float": {
              "fr": "latitude, longitude, altitude au format flottant obligatoire"
            }
          },
          "internationalizedTags": null
        },
        "unit": {
          "internationalizationName": {
            "en": "Units",
            "fr": "Unités"
          },
          "internationalizedColumns": {
            "nom_key": {
              "en": "nom_en",
              "fr": "nom_fr"
            }
          },
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom_key} ({code})",
              "fr": "{nom_key} ({code})"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "tool_type": {
          "internationalizationName": {
            "en": "Tools type",
            "fr": "Type d'outils"
          },
          "internationalizedColumns": null,
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom du type d'outils}",
              "fr": "{nom du type d'outils}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "platform_type": {
          "internationalizationName": {
            "en": "Plateform types",
            "fr": "Types de plateforme"
          },
          "internationalizedColumns": {
            "description_fr": {
              "en": "description_en",
              "fr": "description_fr"
            },
            "nom du type de plateforme_key": {
              "en": "nom du type de plateforme_en",
              "fr": "nom du type de plateforme_fr"
            }
          },
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom du type de plateforme_key}",
              "fr": "{nom du type de plateforme_key}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "file_type": {
          "internationalizationName": {
            "en": "Type's Files",
            "fr": "Type de fichier"
          },
          "internationalizedColumns": null,
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom}",
              "fr": "{nom}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "data_type": {
          "internationalizationName": {
            "en": "Data type",
            "fr": "Types de données"
          },
          "internationalizedColumns": {
            "nom_key": {
              "en": "nom_en",
              "fr": "nom_fr"
            },
            "description_fr": {
              "en": "description_en",
              "fr": "description_fr"
            }
          },
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom_key}",
              "fr": "{nom_key}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "niveau_taxon": {
          "internationalizationName": {
            "en": "Level of taxon",
            "fr": "Niveau de taxon"
          },
          "internationalizedColumns": {
            "nom_key": {
              "en": "nom_en",
              "fr": "nom_fr"
            }
          },
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom_key}",
              "fr": "{nom_key}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "variable_group": {
          "internationalizationName": {
            "en": "Variable's groups",
            "fr": "Groupes de variable"
          },
          "internationalizedColumns": {
            "nom du groupe": {
              "en": "nom du groupe_en",
              "fr": "nom du groupe_fr"
            }
          },
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom du groupe_en}",
              "fr": "{nom du groupe_fr}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "taxon_zooplancton": {
          "internationalizationName": {
            "en": "taxon's zooplancton",
            "fr": "taxon des zooplancton"
          },
          "internationalizedColumns": null,
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom du taxon superieur}.{nom du taxon déterminé}({nom du niveau de taxon})",
              "fr": "{nom du taxon superieur}.{nom du taxon déterminé}({nom du niveau de taxon})"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        },
        "thematic": {
          "internationalizationName": {
            "en": "Thematic",
            "fr": "Thème"
          },
          "internationalizedColumns": {
            "nom_key": {
              "en": "nom_en",
              "fr": "nom_fr"
            },
            "description_fr": {
              "en": "description_en",
              "fr": "description_fr"
            }
          },
          "internationalizedDynamicColumns": {},
          "internationalizationDisplay": {
            "pattern": {
              "en": "{nom_key}",
              "fr": "{nom_key}"
            }
          },
          "internationalizedValidations": {},
          "internationalizedTags": null
        }
      },
      "dataTypes": {
        "phytoplancton": {
          "internationalizationName": {
            "en": "Phytoplancton",
            "fr": "Phytoplancton"
          },
          "internationalizedColumns": null,
          "authorization": {
            "dataGroups": {
              "condition": {
                "internationalizationName": {
                  "en": "Context",
                  "fr": "Contexte"
                }
              },
              "referentiel": {
                "internationalizationName": {
                  "en": "Referential",
                  "fr": "Référentiel"
                }
              },
              "donnee": {
                "internationalizationName": {
                  "en": "Data",
                  "fr": "Donnée"
                }
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": null
              },
              "projet": {
                "internationalizationName": null
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          },
          "internationalizationDisplay": null,
          "internationalizedValidations": {}
        },
        "condition_prelevements": {
          "internationalizationName": {
            "en": "Collection condition",
            "fr": "Condition de prélèvement"
          },
          "internationalizedColumns": null,
          "authorization": {
            "dataGroups": {
              "referentiel": {
                "internationalizationName": {
                  "en": "Referential",
                  "fr": "Référentiel"
                }
              },
              "qualitatif": {
                "internationalizationName": {
                  "en": "Qualitative data",
                  "fr": "Données qualitatives"
                }
              },
              "quantitatif": {
                "internationalizationName": {
                  "en": "Quantitative data",
                  "fr": "Données quantitatives"
                }
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": {
                  "en": "Site",
                  "fr": "Site"
                }
              },
              "projet": {
                "internationalizationName": {
                  "en": "Project",
                  "fr": "Projet"
                }
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          },
          "internationalizationDisplay": null,
          "internationalizedValidations": {}
        },
        "chlorophylle": {
          "internationalizationName": {
            "en": null,
            "fr": "Chlorophylle"
          },
          "internationalizedColumns": null,
          "authorization": {
            "dataGroups": {
              "condition": {
                "internationalizationName": {
                  "en": "Context",
                  "fr": "Contexte"
                }
              },
              "referentiel": {
                "internationalizationName": {
                  "en": "Referential",
                  "fr": "Référentiel"
                }
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": null
              },
              "projet": {
                "internationalizationName": null
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          },
          "internationalizationDisplay": null,
          "internationalizedValidations": {}
        },
        "haute_frequence": {
          "internationalizationName": {
            "en": null,
            "fr": "Haute Fréquence"
          },
          "internationalizedColumns": null,
          "authorization": {
            "dataGroups": {
              "all": {
                "internationalizationName": null
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": null
              },
              "projet": {
                "internationalizationName": null
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          },
          "internationalizationDisplay": null,
          "internationalizedValidations": {}
        },
        "production_primaire": {
          "internationalizationName": {
            "en": null,
            "fr": "Production primaire"
          },
          "internationalizedColumns": null,
          "authorization": {
            "dataGroups": {
              "condition": {
                "internationalizationName": {
                  "en": "Context",
                  "fr": "Contexte"
                }
              },
              "referentiel": {
                "internationalizationName": {
                  "en": "Referential",
                  "fr": "Référentiel"
                }
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": null
              },
              "projet": {
                "internationalizationName": null
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          },
          "internationalizationDisplay": null,
          "internationalizedValidations": {}
        },
        "zooplancton": {
          "internationalizationName": {
            "en": "Zooplancton",
            "fr": "Zooplancton"
          },
          "internationalizedColumns": null,
          "authorization": {
            "dataGroups": {
              "condition": {
                "internationalizationName": {
                  "en": "Context",
                  "fr": "Contexte"
                }
              },
              "donnée": {
                "internationalizationName": {
                  "en": "Donnée",
                  "fr": "Donnée"
                }
              },
              "referentiel": {
                "internationalizationName": {
                  "en": "Referential",
                  "fr": "Référentiel"
                }
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": null
              },
              "projet": {
                "internationalizationName": null
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          },
          "internationalizationDisplay": null,
          "internationalizedValidations": {}
        },
        "physico-chimie": {
          "internationalizationName": {
            "en": "Chemical Physics",
            "fr": "Physico Chimie"
          },
          "internationalizedColumns": null,
          "authorization": {
            "dataGroups": {
              "condition": {
                "internationalizationName": {
                  "en": "Context",
                  "fr": "Contexte"
                }
              },
              "referentiel": {
                "internationalizationName": {
                  "en": "Referential",
                  "fr": "Référentiel"
                }
              },
              "dataGroup_variable": {
                "internationalizationName": {
                  "en": "Data",
                  "fr": "Données"
                }
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": null
              },
              "projet": {
                "internationalizationName": null
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          },
          "internationalizationDisplay": null,
          "internationalizedValidations": {}
        },
        "sonde_multiparametres": {
          "internationalizationName": {
            "en": "Probe data",
            "fr": "Sonde multi-paramètres"
          },
          "internationalizedColumns": null,
          "authorization": {
            "dataGroups": {
              "referentiel": {
                "internationalizationName": {
                  "en": "Referential",
                  "fr": "Référentiel"
                }
              },
              "condition_prelevement": {
                "internationalizationName": {
                  "en": "Prelevement's condition",
                  "fr": "Condition de prélèvement"
                }
              },
              "donnee_prelevement": {
                "internationalizationName": {
                  "en": "Data's condition",
                  "fr": "Données du prélèvement"
                }
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": null
              },
              "projet": {
                "internationalizationName": null
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          },
          "internationalizationDisplay": null,
          "internationalizedValidations": {}
        }
      },
      "internationalizedTags": {},
      "rightsRequest": null
    },
    "comment": null,
    "application": {
      "internationalizationName": {
        "en": "ORE OLA",
        "fr": "ORE OLA"
      },
      "internationalizedColumns": null,
      "name": "ola",
      "version": 1,
      "defaultLanguage": "fr",
      "internationalization": {
        "internationalizationName": {
          "en": "ORE OLA",
          "fr": "ORE OLA"
        }
      }
    },
    "tags": {},
    "rightsRequest": null,
    "references": {
      "tool_type": {
        "internationalizationName": {
          "en": "Tools type",
          "fr": "Type d'outils"
        },
        "internationalizedColumns": null,
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom du type d'outils}",
            "fr": "{nom du type d'outils}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom du type d'outils"
        ],
        "columns": {
          "code sandre": null,
          "type d'outils": null,
          "nom du type d'outils": null,
          "code sandre du contexte": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "tool": {
        "internationalizationName": {
          "en": "Measuring tool",
          "fr": "Outils de mesure"
        },
        "internationalizedColumns": {
          "description_fr": {
            "en": "description_en",
            "fr": "description_fr"
          },
          "nom de l'outil de mesure_fr": {
            "en": "nom de l'outil de mesure_en",
            "fr": "nom de l'outil de mesure_fr"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom de l'outil de mesure_fr}",
            "fr": "{nom de l'outil de mesure_fr}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom du type d'outils de mesure",
          "nom de l'outil de mesure_fr"
        ],
        "columns": {
          "modèle": null,
          "fabricant": null,
          "code sandre": null,
          "étalonnage": null,
          "description_en": null,
          "description_fr": null,
          "numéro de série": null,
          "code sandre du contexte": null,
          "nom de l'outil de mesure_en": null,
          "nom de l'outil de mesure_fr": null,
          "nom du type d'outils de mesure": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "tool_type",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": true,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          }
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "unit": {
        "internationalizationName": {
          "en": "Units",
          "fr": "Unités"
        },
        "internationalizedColumns": {
          "nom_key": {
            "en": "nom_en",
            "fr": "nom_fr"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom_key} ({code})",
            "fr": "{nom_key} ({code})"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom_key"
        ],
        "columns": {
          "code": null,
          "nom_en": null,
          "nom_fr": null,
          "nom_key": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "platform_type": {
        "internationalizationName": {
          "en": "Plateform types",
          "fr": "Types de plateforme"
        },
        "internationalizedColumns": {
          "description_fr": {
            "en": "description_en",
            "fr": "description_fr"
          },
          "nom du type de plateforme_key": {
            "en": "nom du type de plateforme_en",
            "fr": "nom du type de plateforme_fr"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom du type de plateforme_key}",
            "fr": "{nom du type de plateforme_key}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom du type de plateforme_key"
        ],
        "columns": {
          "code sandre": null,
          "description_en": null,
          "description_fr": null,
          "code sandre du contexte": null,
          "nom du type de plateforme_en": null,
          "nom du type de plateforme_fr": null,
          "nom du type de plateforme_key": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "site_type": {
        "internationalizationName": {
          "en": "Sites types",
          "fr": "Types de site"
        },
        "internationalizedColumns": {
          "nom_key": {
            "en": "nom_en",
            "fr": "nom_fr"
          },
          "description_fr": {
            "en": "description_en",
            "fr": "description_fr"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom_key}",
            "fr": "{nom_key}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom_key"
        ],
        "columns": {
          "nom_en": null,
          "nom_fr": null,
          "nom_key": null,
          "code sandre": null,
          "description_en": null,
          "description_fr": null,
          "code sandre du contexte": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "ref_site": {
        "internationalizationName": {
          "en": "Site",
          "fr": "Site"
        },
        "internationalizedColumns": {
          "nom du site_key": {
            "en": "nom du site_en",
            "fr": "nom du site_fr"
          },
          "description du site_fr": {
            "en": "description du site_en",
            "fr": "description du site_fr"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom du site_key}",
            "fr": "{nom du site_key}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom du site_key"
        ],
        "columns": {
          "nom du site_en": null,
          "nom du site_fr": null,
          "nom du site_key": null,
          "nom du type de site": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "site_type",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": true,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "description du site_en": null,
          "description du site_fr": null,
          "code sandre du Plan d'eau": null,
          "code sandre de la Masse d'eau plan d'eau": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "platform": {
        "internationalizationName": {
          "en": "Plateforms",
          "fr": "Plateformes"
        },
        "internationalizedColumns": {
          "nom de la plateforme_key": {
            "en": "nom de la plateforme_en",
            "fr": "nom de la plateforme_fr"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom de la plateforme_key}",
            "fr": "{nom de la plateforme_key}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom du site",
          "nom du type de plateforme_key",
          "nom de la plateforme_key"
        ],
        "columns": {
          "altitude": null,
          "latitude": null,
          "longitude": null,
          "code sandre": null,
          "nom du site": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "ref_site",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": {
                    "expression": "return references.ref_site.find({it.naturalKey.equals(datum[\"nom du site\"])}).naturalKey;\n",
                    "references": [
                      "ref_site"
                    ],
                    "datatypes": []
                  }
                },
                "required": true,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "code sandre du contexte": null,
          "nom de la plateforme_en": null,
          "nom de la plateforme_fr": null,
          "nom de la plateforme_key": null,
          "nom du type de plateforme_key": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "platform_type",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": true,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          }
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {
          "format_float": {
            "internationalizationName": {
              "fr": "latitude, longitude, altitude au format flottant obligatoire"
            },
            "internationalizedColumns": null,
            "checker": {
              "name": "Float",
              "params": {
                "pattern": null,
                "refType": null,
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": false,
                  "groovy": null
                },
                "required": false,
                "multiplicity": "ONE"
              }
            },
            "columns": [
              "altitude",
              "latitude",
              "longitude"
            ]
          }
        },
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "file_type": {
        "internationalizationName": {
          "en": "Type's Files",
          "fr": "Type de fichier"
        },
        "internationalizedColumns": null,
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom}",
            "fr": "{nom}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom"
        ],
        "columns": {
          "nom": null,
          "description": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "project": {
        "internationalizationName": {
          "en": "Project",
          "fr": "Projet"
        },
        "internationalizedColumns": {
          "nom du projet_key": {
            "en": "nom du projet_en",
            "fr": "nom du projet_fr"
          },
          "description du projet_fr": {
            "en": "description du projet_en",
            "fr": "description du projet_fr"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom du projet_key}",
            "fr": "{nom du projet_key}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom du projet_key"
        ],
        "columns": {
          "nom du projet_en": null,
          "nom du projet_fr": null,
          "nom du projet_key": null,
          "description du projet_en": null,
          "description du projet_fr": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "project_site": {
        "internationalizationName": {
          "en": "Project on site",
          "fr": "Projet par site"
        },
        "internationalizedColumns": null,
        "internationalizationDisplay": null,
        "separator": ";",
        "keyColumns": [
          "nom du projet",
          "nom du site"
        ],
        "columns": {
          "date de fin": null,
          "nom du site": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "ref_site",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": false,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "nom du projet": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "project",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": false,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "date de début": null,
          "commentaire de projet": null,
          "commanditaire du projet": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "niveau_taxon": {
        "internationalizationName": {
          "en": "Level of taxon",
          "fr": "Niveau de taxon"
        },
        "internationalizedColumns": {
          "nom_key": {
            "en": "nom_en",
            "fr": "nom_fr"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom_key}",
            "fr": "{nom_key}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom_key"
        ],
        "columns": {
          "nom_en": null,
          "nom_fr": null,
          "nom_key": null,
          "code sandre": null,
          "code sandre du contexte": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "taxon_zooplancton": {
        "internationalizationName": {
          "en": "taxon's zooplancton",
          "fr": "taxon des zooplancton"
        },
        "internationalizedColumns": null,
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom du taxon superieur}.{nom du taxon déterminé}({nom du niveau de taxon})",
            "fr": "{nom du taxon superieur}.{nom du taxon déterminé}({nom du niveau de taxon})"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom du taxon déterminé"
        ],
        "columns": {
          "theme": null,
          "preselected": null,
          "code sandre du taxon": null,
          "nom du niveau de taxon": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "niveau_taxon",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": true,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "nom du taxon superieur": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "taxon_zooplancton",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": false,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "nom du taxon déterminé": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "RegularExpression",
              "params": {
                "pattern": ".*",
                "refType": null,
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": true,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "code sandre du taxon supérieur": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "variable_norm": {
        "internationalizationName": {
          "en": "Variables' norms",
          "fr": "Normes de variable"
        },
        "internationalizedColumns": null,
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom}",
            "fr": "{nom}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom"
        ],
        "columns": {
          "nom": null,
          "définition": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "variable_group": {
        "internationalizationName": {
          "en": "Variable's groups",
          "fr": "Groupes de variable"
        },
        "internationalizedColumns": {
          "nom du groupe": {
            "en": "nom du groupe_en",
            "fr": "nom du groupe_fr"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom du groupe_en}",
            "fr": "{nom du groupe_fr}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom du groupe"
        ],
        "columns": {
          "code sandre": null,
          "nom du groupe": null,
          "nom du groupe_en": null,
          "nom du groupe_fr": null,
          "nom du groupe parent": null,
          "code sandre du contexte": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "ref_variable": {
        "internationalizationName": {
          "en": "Variables",
          "fr": "Variables"
        },
        "internationalizedColumns": {
          "définition_fr": {
            "en": "définition_en",
            "fr": "définition_fr"
          },
          "nom de la variable_fr": {
            "en": "Affichage de la variable_en",
            "fr": "Affichage de la variable_fr"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom de la variable_fr}",
            "fr": "{nom de la variable_fr}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom de la variable_fr"
        ],
        "columns": {
          "code sandre": null,
          "nom du groupe": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "variable_group",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": false,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "définition_en": null,
          "définition_fr": null,
          "ordre d'affichage": null,
          "valeur  qualitative": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "RegularExpression",
              "params": {
                "pattern": "faux|vrai",
                "refType": null,
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": true,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "nom de la variable_en": null,
          "nom de la variable_fr": null,
          "code sandre du contexte": null,
          "Affichage de la variable_en": null,
          "Affichage de la variable_fr": null,
          "nom de la norme de variable": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "variable_norm",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": true,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          }
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "data_type": {
        "internationalizationName": {
          "en": "Data type",
          "fr": "Types de données"
        },
        "internationalizedColumns": {
          "nom_key": {
            "en": "nom_en",
            "fr": "nom_fr"
          },
          "description_fr": {
            "en": "description_en",
            "fr": "description_fr"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom_key}",
            "fr": "{nom_key}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom_key"
        ],
        "columns": {
          "nom_en": null,
          "nom_fr": null,
          "nom_key": null,
          "description_en": null,
          "description_fr": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "controle_coherence": {
        "internationalizationName": {
          "en": "Controle de la cohérence",
          "fr": "Controle de la cohérence"
        },
        "internationalizedColumns": null,
        "internationalizationDisplay": null,
        "separator": ";",
        "keyColumns": [
          "nom de la variable",
          "nom du type de données",
          "nom du site"
        ],
        "columns": {
          "valeur max": null,
          "valeur min": null,
          "nom du site": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "ref_site",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": false,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "nom de la variable": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "ref_variable",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": false,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "nom du type de données": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "data_type",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": false,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          }
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "propriete_taxon": {
        "internationalizationName": {
          "en": "Proporties of taxons",
          "fr": "Propiétés des taxons"
        },
        "internationalizedColumns": {
          "définition_fr": {
            "en": "définition_en",
            "fr": "définition_fr"
          },
          "nom de la propriété_key": {
            "en": "nom de la propriété_en",
            "fr": "nom de la propriété_fr"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom de la propriété_key}",
            "fr": "{nom de la propriété_key}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom de la propriété_key"
        ],
        "columns": {
          "isFloatValue": null,
          "isQualitative": null,
          "type associé": null,
          "définition_en": null,
          "définition_fr": null,
          "ordre d'affichage": null,
          "nom de la propriété_en": null,
          "nom de la propriété_fr": null,
          "nom de la propriété_key": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "taxon_phytoplancton": {
        "internationalizationName": {
          "en": "taxon's phytoplanctons",
          "fr": "taxon des phytoplanctons"
        },
        "internationalizedColumns": null,
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom du niveau de taxon}: {nom du taxon superieur}.{nom du taxon déterminé}",
            "fr": "{nom du niveau de taxon}: {nom du taxon superieur}.{nom du taxon déterminé}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom du taxon déterminé"
        ],
        "columns": {
          "theme": null,
          "Code Sandre": null,
          "Notes libres": null,
          "Synonyme ancien": null,
          "Synonyme récent": null,
          "code sandre du taxon": null,
          "nom du niveau de taxon": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "niveau_taxon",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": true,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "nom du taxon superieur": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "taxon_phytoplancton",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": false,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "Année de la description": null,
          "Auteur de la description": null,
          "nom du taxon déterminé": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "RegularExpression",
              "params": {
                "pattern": ".*",
                "refType": null,
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": true,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "Classe algale sensu Bourrelly": null,
          "Référence de la description": null,
          "code sandre du taxon supérieur": null,
          "Références relatives à ce taxon": null,
          "niveau incertitude de détermination": null
        },
        "computedColumns": {},
        "dynamicColumns": {
          "proprietes_taxon": {
            "presenceConstraint": "MANDATORY",
            "internationalizationName": {
              "en": "Properties of Taxa",
              "fr": "Proprétés de Taxons"
            },
            "headerPrefix": "pt_",
            "reference": "propriete_taxon",
            "referenceColumnToLookForHeader": "nom de la propriété_key"
          }
        },
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "valeurs_qualitative": {
        "internationalizationName": {
          "en": "Qualitative values",
          "fr": "Valeurs qualitatives"
        },
        "internationalizedColumns": {
          "nom_key": {
            "en": "nom_en",
            "fr": "nom_fr"
          },
          "valeur_key": {
            "en": "valeur_en",
            "fr": "valeur_fr"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{valeur_key}",
            "fr": "{valeur_key}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom_key",
          "valeur_key"
        ],
        "columns": {
          "nom_en": null,
          "nom_fr": null,
          "nom_key": null,
          "valeur_en": null,
          "valeur_fr": null,
          "valeur_key": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "stade_développement_zoo": {
        "internationalizationName": {
          "en": "Stage of development",
          "fr": "Stade de développement"
        },
        "internationalizedColumns": {
          "nom_key": {
            "en": "nom_en",
            "fr": "nom_fr"
          },
          "description_fr": {
            "en": "description_en",
            "fr": "description_fr"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom_key}",
            "fr": "{nom_key}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom_key"
        ],
        "columns": {
          "nom_en": null,
          "nom_fr": null,
          "nom_key": null,
          "code sandre": null,
          "description_en": null,
          "description_fr": null,
          "code sandre du contexte": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "thematic": {
        "internationalizationName": {
          "en": "Thematic",
          "fr": "Thème"
        },
        "internationalizedColumns": {
          "nom_key": {
            "en": "nom_en",
            "fr": "nom_fr"
          },
          "description_fr": {
            "en": "description_en",
            "fr": "description_fr"
          }
        },
        "internationalizationDisplay": {
          "pattern": {
            "en": "{nom_key}",
            "fr": "{nom_key}"
          }
        },
        "separator": ";",
        "keyColumns": [
          "nom_key"
        ],
        "columns": {
          "nom_en": null,
          "nom_fr": null,
          "nom_key": null,
          "description_en": null,
          "description_fr": null
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      },
      "data_type_site_theme_project": {
        "internationalizationName": {
          "en": "Data type for theme's site and project",
          "fr": "Type de données par thème de sites et projet"
        },
        "internationalizedColumns": null,
        "internationalizationDisplay": null,
        "separator": ";",
        "keyColumns": [
          "nom du projet",
          "nom du site",
          "nom du thème",
          "nom du type de données"
        ],
        "columns": {
          "nom du site": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "ref_site",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": false,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "nom du projet": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "project",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": false,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "nom du thème": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "thematic",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": false,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          },
          "nom du type de données": {
            "presenceConstraint": "MANDATORY",
            "checker": {
              "name": "Reference",
              "params": {
                "pattern": null,
                "refType": "data_type",
                "groovy": null,
                "duration": null,
                "transformation": {
                  "codify": true,
                  "groovy": null
                },
                "required": false,
                "multiplicity": "ONE"
              }
            },
            "defaultValue": null
          }
        },
        "computedColumns": {},
        "dynamicColumns": {},
        "validations": {},
        "allowUnexpectedColumns": false,
        "tags": []
      }
    },
    "compositeReferences": {
      "arbre_outil": {
        "internationalizationName": null,
        "internationalizedColumns": null,
        "components": [
          {
            "internationalizationName": null,
            "internationalizedColumns": null,
            "reference": "tool_type",
            "parentKeyColumn": null,
            "parentRecursiveKey": null
          },
          {
            "internationalizationName": null,
            "internationalizedColumns": null,
            "reference": "tool",
            "parentKeyColumn": "nom du type d'outils de mesure",
            "parentRecursiveKey": null
          }
        ]
      },
      "arbre_project": {
        "internationalizationName": null,
        "internationalizedColumns": null,
        "components": [
          {
            "internationalizationName": null,
            "internationalizedColumns": null,
            "reference": "project",
            "parentKeyColumn": null,
            "parentRecursiveKey": null
          }
        ]
      },
      "arbre_zooplanctons": {
        "internationalizationName": null,
        "internationalizedColumns": null,
        "components": [
          {
            "internationalizationName": null,
            "internationalizedColumns": null,
            "reference": "taxon_zooplancton",
            "parentKeyColumn": null,
            "parentRecursiveKey": "nom du taxon superieur"
          }
        ]
      },
      "arbre_localisations": {
        "internationalizationName": null,
        "internationalizedColumns": null,
        "components": [
          {
            "internationalizationName": null,
            "internationalizedColumns": null,
            "reference": "site_type",
            "parentKeyColumn": null,
            "parentRecursiveKey": null
          },
          {
            "internationalizationName": null,
            "internationalizedColumns": null,
            "reference": "ref_site",
            "parentKeyColumn": "nom du type de site",
            "parentRecursiveKey": null
          },
          {
            "internationalizationName": null,
            "internationalizedColumns": null,
            "reference": "platform",
            "parentKeyColumn": "nom du site",
            "parentRecursiveKey": null
          }
        ]
      },
      "arbre_phytoplanctons": {
        "internationalizationName": null,
        "internationalizedColumns": null,
        "components": [
          {
            "internationalizationName": null,
            "internationalizedColumns": null,
            "reference": "taxon_phytoplancton",
            "parentKeyColumn": null,
            "parentRecursiveKey": "nom du taxon superieur"
          }
        ]
      }
    },
    "dataTypes": {
      "zooplancton": {
        "internationalizationName": {
          "en": "Zooplancton",
          "fr": "Zooplancton"
        },
        "internationalizedColumns": null,
        "internationalizationDisplays": null,
        "format": {
          "headerLine": 1,
          "firstRowLine": 2,
          "separator": ";",
          "columns": [
            {
              "header": "nom du projet",
              "boundTo": {
                "variable": "projet",
                "component": "nom du projet",
                "id": "projet_nom du projet",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom du site",
              "boundTo": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom de la plateforme",
              "boundTo": {
                "variable": "plateforme",
                "component": "nom de la plateforme",
                "id": "plateforme_nom de la plateforme",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "date de prélèvement",
              "boundTo": {
                "variable": "date",
                "component": "day",
                "id": "date_day",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "outil de mesure",
              "boundTo": {
                "variable": "outil",
                "component": "mesure",
                "id": "outil_mesure",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "outil de prélèvement",
              "boundTo": {
                "variable": "outil",
                "component": "prelevement",
                "id": "outil_prelevement",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "profondeur minimum",
              "boundTo": {
                "variable": "profondeur",
                "component": "minimum",
                "id": "profondeur_minimum",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "profondeur maximum",
              "boundTo": {
                "variable": "profondeur",
                "component": "maximum",
                "id": "profondeur_maximum",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom du determinateur",
              "boundTo": {
                "variable": "taxon",
                "component": "nom du determinateur",
                "id": "taxon_nom du determinateur",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "biovolume sédimenté",
              "boundTo": {
                "variable": "biovolume sédimenté",
                "component": "value",
                "id": "biovolume sédimenté_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom du taxon déterminé",
              "boundTo": {
                "variable": "taxon",
                "component": "nom du taxon déterminé",
                "id": "taxon_nom du taxon déterminé",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "stade de développement",
              "boundTo": {
                "variable": "taxon",
                "component": "stade de développement",
                "id": "taxon_stade de développement",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nombre individus",
              "boundTo": {
                "variable": "nombre_individus",
                "component": "value",
                "id": "nombre_individus_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            }
          ],
          "repeatedColumns": [],
          "constants": [],
          "allowUnexpectedColumns": false
        },
        "data": {
          "date": {
            "chartDescription": null,
            "components": {
              "day": {
                "checker": {
                  "name": "Date",
                  "params": {
                    "pattern": "dd/MM/yyyy",
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "site": {
            "chartDescription": null,
            "components": {
              "nom du site": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "ref_site",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.ref_site.find({it.naturalKey.equals(datum.site['nom du site'])}).hierarchicalKey;\n",
                        "references": [
                          "ref_site"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "outil": {
            "chartDescription": null,
            "components": {
              "mesure": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "tool",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "return references.tool.find({ it.refValues[\"nom de l'outil de mesure_fr\"].replaceAll(' ', '_').equalsIgnoreCase(datum.outil['mesure'].replaceAll(' ', '_')) }).naturalKey;\n",
                        "references": [
                          "tool"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "prelevement": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "tool",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "return references.tool.find({it.refValues[\"nom de l'outil de mesure_fr\"].replaceAll(' ', '_').equalsIgnoreCase(datum.outil['prelevement'].replaceAll(' ', '_')) }).naturalKey;\n",
                        "references": [
                          "tool"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "taxon": {
            "chartDescription": null,
            "components": {
              "nom du determinateur": null,
              "stade de développement": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "stade_développement_zoo",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "return references.stade_développement_zoo.find({ it.refValues[\"nom_key\"].equalsIgnoreCase(datum.taxon['stade de développement']) }).naturalKey;\n",
                        "references": [
                          "stade_développement_zoo"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "nom du taxon déterminé": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "taxon_zooplancton",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "if(datum.taxon['nom du taxon déterminé'].substring(datum.taxon['nom du taxon déterminé'].length()-1).equals(' ')){\n  return references.taxon_zooplancton.find({ it.refValues[\"nom du taxon déterminé\"].equalsIgnoreCase(datum.taxon['nom du taxon déterminé'].substring(0, datum.taxon['nom du taxon déterminé'].length()-1)) }).naturalKey;\n} else {\n  return references.taxon_zooplancton.find({ it.refValues[\"nom du taxon déterminé\"].equalsIgnoreCase(datum.taxon['nom du taxon déterminé']) }).naturalKey;\n}\n",
                        "references": [
                          "taxon_zooplancton"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "projet": {
            "chartDescription": null,
            "components": {
              "nom du projet": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "project",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.project.find({it.naturalKey.equals(datum.projet['nom du projet'])}).hierarchicalKey;\n",
                        "references": [
                          "project"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "plateforme": {
            "chartDescription": null,
            "components": {
              "nom de la plateforme": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "platform",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "return references.platform.find({it.refValues['nom de la plateforme_key'].replaceAll(' ', '_').equalsIgnoreCase(datum.plateforme['nom de la plateforme'].replaceAll(' ', '_'))}).naturalKey;\n",
                        "references": [
                          "platform"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "profondeur": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"metre\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "maximum": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.profondeur['maximum'].replaceAll(',','.'); String variable = 'profondeur_maximum'; if(Float.parseFloat(valeur) >= 51) {\n    throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieur à la valeur 50\" , variable, valeur));\n} else {\n  return valeur;\n}\n",
                        "references": [],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "minimum": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.profondeur['minimum'].replaceAll(',','.'); String variable = 'profondeur_minimum'; if(Float.parseFloat(valeur) <= -1) {\n    throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur 0\" , variable, valeur));\n} else {\n  return valeur;\n}\n",
                        "references": [],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "nombre_individus": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"individus par mètre carré\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "biovolume sédimenté": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"millilitre par mètre carré\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          }
        },
        "validations": {},
        "uniqueness": [
          {
            "variable": "projet",
            "component": "nom du projet",
            "id": "projet_nom du projet",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "site",
            "component": "nom du site",
            "id": "site_nom du site",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "plateforme",
            "component": "nom de la plateforme",
            "id": "plateforme_nom de la plateforme",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "date",
            "component": "day",
            "id": "date_day",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "taxon",
            "component": "nom du taxon déterminé",
            "id": "taxon_nom du taxon déterminé",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "taxon",
            "component": "stade de développement",
            "id": "taxon_stade de développement",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "outil",
            "component": "mesure",
            "id": "outil_mesure",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "outil",
            "component": "prelevement",
            "id": "outil_prelevement",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          }
        ],
        "migrations": {},
        "authorization": {
          "timeScope": {
            "variable": "date",
            "component": "day",
            "id": "date_day",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": null,
              "internationalizedColumns": null,
              "variable": "site",
              "component": "nom du site",
              "variableComponentKey": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            },
            "projet": {
              "internationalizationName": null,
              "internationalizedColumns": null,
              "variable": "projet",
              "component": "nom du projet",
              "variableComponentKey": {
                "variable": "projet",
                "component": "nom du projet",
                "id": "projet_nom du projet",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            }
          },
          "dataGroups": {
            "donnée": {
              "internationalizationName": {
                "en": "Donnée",
                "fr": "Donnée"
              },
              "internationalizedColumns": null,
              "label": "Data",
              "data": [
                "biovolume sédimenté",
                "nombre_individus"
              ]
            },
            "condition": {
              "internationalizationName": {
                "en": "Context",
                "fr": "Contexte"
              },
              "internationalizedColumns": null,
              "label": "Contexte",
              "data": [
                "outil",
                "profondeur",
                "taxon"
              ]
            },
            "referentiel": {
              "internationalizationName": {
                "en": "Referential",
                "fr": "Référentiel"
              },
              "internationalizedColumns": null,
              "label": "Référentiel",
              "data": [
                "date",
                "site",
                "projet",
                "plateforme"
              ]
            }
          },
          "columnsDescription": {
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "admin",
              "withPeriods": false,
              "withDataGroups": false
            },
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "depot",
              "withPeriods": false,
              "withDataGroups": false
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "delete",
              "withPeriods": false,
              "withDataGroups": false
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "extraction",
              "withPeriods": true,
              "withDataGroups": true
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "publication",
              "withPeriods": false,
              "withDataGroups": false
            }
          },
          "internationalization": {
            "dataGroups": {
              "condition": {
                "internationalizationName": {
                  "en": "Context",
                  "fr": "Contexte"
                }
              },
              "donnée": {
                "internationalizationName": {
                  "en": "Donnée",
                  "fr": "Donnée"
                }
              },
              "referentiel": {
                "internationalizationName": {
                  "en": "Referential",
                  "fr": "Référentiel"
                }
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": null
              },
              "projet": {
                "internationalizationName": null
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          }
        },
        "repository": {
          "filePattern": "(.*)!(.*)_zooplancton_(.*)_(.*).csv",
          "authorizationScope": {
            "site": 2,
            "projet": 1
          },
          "startDate": {
            "token": 3
          },
          "endDate": {
            "token": 4
          }
        },
        "tags": []
      },
      "chlorophylle": {
        "internationalizationName": {
          "en": null,
          "fr": "Chlorophylle"
        },
        "internationalizedColumns": null,
        "internationalizationDisplays": null,
        "format": {
          "headerLine": 1,
          "firstRowLine": 2,
          "separator": ";",
          "columns": [
            {
              "header": "nom du projet",
              "boundTo": {
                "variable": "projet",
                "component": "nom du projet",
                "id": "projet_nom du projet",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "Nom du site",
              "boundTo": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom de la plateforme",
              "boundTo": {
                "variable": "plateforme",
                "component": "nom de la plateforme",
                "id": "plateforme_nom de la plateforme",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "date de prelevement",
              "boundTo": {
                "variable": "date",
                "component": "day",
                "id": "date_day",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "profondeur min",
              "boundTo": {
                "variable": "profondeur",
                "component": "minimum",
                "id": "profondeur_minimum",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "profondeur max",
              "boundTo": {
                "variable": "profondeur",
                "component": "maximum",
                "id": "profondeur_maximum",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "chlorophylle a strickland-parsons",
              "boundTo": {
                "variable": "chlorophylle",
                "component": "a strickland-parsons",
                "id": "chlorophylle_a strickland-parsons",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "chlorophylle c",
              "boundTo": {
                "variable": "chlorophylle",
                "component": "c",
                "id": "chlorophylle_c",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "carotenoïde",
              "boundTo": {
                "variable": "chlorophylle",
                "component": "carotenoïde",
                "id": "chlorophylle_carotenoïde",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "chlorophylle a scor-unesco",
              "boundTo": {
                "variable": "chlorophylle",
                "component": "a scor-unesco",
                "id": "chlorophylle_a scor-unesco",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "pheopigments",
              "boundTo": {
                "variable": "chlorophylle",
                "component": "pheopigments",
                "id": "chlorophylle_pheopigments",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            }
          ],
          "repeatedColumns": [],
          "constants": [],
          "allowUnexpectedColumns": false
        },
        "data": {
          "date": {
            "chartDescription": null,
            "components": {
              "day": {
                "checker": {
                  "name": "Date",
                  "params": {
                    "pattern": "dd/MM/yyyy",
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "site": {
            "chartDescription": null,
            "components": {
              "nom du site": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "ref_site",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.ref_site.find({it.naturalKey.equals(datum.site['nom du site'])}).hierarchicalKey;\n",
                        "references": [
                          "ref_site"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "projet": {
            "chartDescription": null,
            "components": {
              "nom du projet": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "project",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.project.find({it.naturalKey.equals(datum.projet['nom du projet'])}).hierarchicalKey;\n",
                        "references": [
                          "project"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "plateforme": {
            "chartDescription": null,
            "components": {
              "nom de la plateforme": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "platform",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "return references.platform.find({it.refValues['nom de la plateforme_key'].equalsIgnoreCase(datum.plateforme['nom de la plateforme'])}).naturalKey;\n",
                        "references": [
                          "platform"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "profondeur": {
            "chartDescription": null,
            "components": {
              "unit": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"mètre\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "maximum": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "minimum": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "chlorophylle": {
            "chartDescription": null,
            "components": {
              "c": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "unit": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"microgramme par litre\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "carotenoïde": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "pheopigments": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "a scor-unesco": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "a strickland-parsons": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          }
        },
        "validations": {},
        "uniqueness": [
          {
            "variable": "date",
            "component": "day",
            "id": "date_day",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "projet",
            "component": "nom du projet",
            "id": "projet_nom du projet",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "site",
            "component": "nom du site",
            "id": "site_nom du site",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "plateforme",
            "component": "nom de la plateforme",
            "id": "plateforme_nom de la plateforme",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "profondeur",
            "component": "minimum",
            "id": "profondeur_minimum",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "profondeur",
            "component": "maximum",
            "id": "profondeur_maximum",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          }
        ],
        "migrations": {},
        "authorization": {
          "timeScope": {
            "variable": "date",
            "component": "day",
            "id": "date_day",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": null,
              "internationalizedColumns": null,
              "variable": "site",
              "component": "nom du site",
              "variableComponentKey": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            },
            "projet": {
              "internationalizationName": null,
              "internationalizedColumns": null,
              "variable": "projet",
              "component": "nom du projet",
              "variableComponentKey": {
                "variable": "projet",
                "component": "nom du projet",
                "id": "projet_nom du projet",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            }
          },
          "dataGroups": {
            "condition": {
              "internationalizationName": {
                "en": "Context",
                "fr": "Contexte"
              },
              "internationalizedColumns": null,
              "label": "Contexte",
              "data": [
                "profondeur",
                "chlorophylle"
              ]
            },
            "referentiel": {
              "internationalizationName": {
                "en": "Referential",
                "fr": "Référentiel"
              },
              "internationalizedColumns": null,
              "label": "Référentiel",
              "data": [
                "date",
                "site",
                "projet",
                "plateforme"
              ]
            }
          },
          "columnsDescription": {
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "admin",
              "withPeriods": false,
              "withDataGroups": false
            },
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "depot",
              "withPeriods": false,
              "withDataGroups": false
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "delete",
              "withPeriods": false,
              "withDataGroups": false
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "extraction",
              "withPeriods": true,
              "withDataGroups": true
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "publication",
              "withPeriods": false,
              "withDataGroups": false
            }
          },
          "internationalization": {
            "dataGroups": {
              "condition": {
                "internationalizationName": {
                  "en": "Context",
                  "fr": "Contexte"
                }
              },
              "referentiel": {
                "internationalizationName": {
                  "en": "Referential",
                  "fr": "Référentiel"
                }
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": null
              },
              "projet": {
                "internationalizationName": null
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          }
        },
        "repository": {
          "filePattern": "(.*)!(.*)_chlorophylle_(.*)_(.*).csv",
          "authorizationScope": {
            "site": 2,
            "projet": 1
          },
          "startDate": {
            "token": 3
          },
          "endDate": {
            "token": 4
          }
        },
        "tags": []
      },
      "phytoplancton": {
        "internationalizationName": {
          "en": "Phytoplancton",
          "fr": "Phytoplancton"
        },
        "internationalizedColumns": null,
        "internationalizationDisplays": null,
        "format": {
          "headerLine": 1,
          "firstRowLine": 2,
          "separator": ";",
          "columns": [
            {
              "header": "nom du projet",
              "boundTo": {
                "variable": "projet",
                "component": "nom du projet",
                "id": "projet_nom du projet",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom du site",
              "boundTo": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom de la plateforme",
              "boundTo": {
                "variable": "plateforme",
                "component": "nom de la plateforme",
                "id": "plateforme_nom de la plateforme",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "date de prélèvement",
              "boundTo": {
                "variable": "date",
                "component": "day",
                "id": "date_day",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "outil de mesure",
              "boundTo": {
                "variable": "outil",
                "component": "mesure",
                "id": "outil_mesure",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "outil de prélèvement",
              "boundTo": {
                "variable": "outil",
                "component": "prelevement",
                "id": "outil_prelevement",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "profondeur minimum",
              "boundTo": {
                "variable": "profondeur",
                "component": "minimum",
                "id": "profondeur_minimum",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "profondeur maximum",
              "boundTo": {
                "variable": "profondeur",
                "component": "maximum",
                "id": "profondeur_maximum",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom du déterminateur",
              "boundTo": {
                "variable": "taxon",
                "component": "nom du determinateur",
                "id": "taxon_nom du determinateur",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "volume sédimenté",
              "boundTo": {
                "variable": "volume sedimente",
                "component": "value",
                "id": "volume sedimente_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom du taxon déterminé",
              "boundTo": {
                "variable": "taxon",
                "component": "nom du taxon déterminé",
                "id": "taxon_nom du taxon déterminé",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "surface de comptage",
              "boundTo": {
                "variable": "surface de comptage",
                "component": "value",
                "id": "surface de comptage_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "Nombre de champs comptés",
              "boundTo": {
                "variable": "nombre de champs comptés",
                "component": "value",
                "id": "nombre de champs comptés_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nombre d'objets comptés",
              "boundTo": {
                "variable": "nombre d'objets comptés",
                "component": "value",
                "id": "nombre d'objets comptés_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nombre d'objets par ml",
              "boundTo": {
                "variable": "nombre d'objets par ml",
                "component": "value",
                "id": "nombre d'objets par ml_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nombre de cellules par ml",
              "boundTo": {
                "variable": "nombre de cellules par ml",
                "component": "value",
                "id": "nombre de cellules par ml_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "biovolume de l'espèce dans l'échantillon",
              "boundTo": {
                "variable": "biovolume de l'espèce dans l'échantillon",
                "component": "value",
                "id": "biovolume de l'espèce dans l'échantillon_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            }
          ],
          "repeatedColumns": [],
          "constants": [],
          "allowUnexpectedColumns": false
        },
        "data": {
          "date": {
            "chartDescription": null,
            "components": {
              "day": {
                "checker": {
                  "name": "Date",
                  "params": {
                    "pattern": "dd/MM/yyyy",
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "site": {
            "chartDescription": null,
            "components": {
              "nom du site": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "ref_site",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.ref_site.find({it.naturalKey.equals(datum.site['nom du site'])}).hierarchicalKey;\n",
                        "references": [
                          "ref_site"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "outil": {
            "chartDescription": null,
            "components": {
              "mesure": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "tool",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "if(datum.outil['mesure'] != \"\") {\n  return references.tool.find({it.refValues[\"nom de l'outil de mesure_fr\"].equalsIgnoreCase(datum.outil['mesure'])}).naturalKey;\n} else {\n  return datum.outil['mesure'];\n}\n",
                        "references": [
                          "tool"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "prelevement": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "tool",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "if(datum.outil['prelevement'] != \"\") {\n  return references.tool.find({it.refValues[\"nom de l'outil de mesure_fr\"].equalsIgnoreCase(datum.outil['prelevement'])}).naturalKey;\n} else {\n  return datum.outil['prelevement'];\n}\n",
                        "references": [
                          "tool"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "taxon": {
            "chartDescription": null,
            "components": {
              "nom du determinateur": null,
              "nom du taxon déterminé": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "taxon_phytoplancton",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "if(datum.taxon['nom du taxon déterminé'].substring(datum.taxon['nom du taxon déterminé'].length()-1).equals(' ')){\n  return references.taxon_phytoplancton.find({ it.refValues[\"nom du taxon déterminé\"].equalsIgnoreCase(datum.taxon['nom du taxon déterminé'].substring(0, datum.taxon['nom du taxon déterminé'].length()-1)) }).naturalKey;\n} else {\n  return references.taxon_phytoplancton.find({ it.refValues[\"nom du taxon déterminé\"].equalsIgnoreCase(datum.taxon['nom du taxon déterminé']) }).naturalKey;\n}\n",
                        "references": [
                          "taxon_phytoplancton"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "projet": {
            "chartDescription": null,
            "components": {
              "nom du projet": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "project",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.project.find({it.naturalKey.equals(datum.projet['nom du projet'])}).hierarchicalKey;\n",
                        "references": [
                          "project"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "plateforme": {
            "chartDescription": null,
            "components": {
              "nom de la plateforme": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "platform",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "return references.platform.find({it.refValues['nom de la plateforme_key'].equalsIgnoreCase(datum.plateforme['nom de la plateforme'])}).naturalKey;\n",
                        "references": [
                          "platform"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "profondeur": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"metre\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "maximum": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "minimum": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "volume sedimente": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"millilitre\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "surface de comptage": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"millimetre_carre\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "nombre d'objets par ml": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"individus_par_metre_carre\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "nombre d'objets comptés": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"individus_par_metre_carre\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "nombre de cellules par ml": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"individus_par_metre_carre\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "nombre de champs comptés": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"no_unit\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "biovolume de l'espèce dans l'échantillon": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"micrometre_cube_par_millilitre\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          }
        },
        "validations": {},
        "uniqueness": [
          {
            "variable": "projet",
            "component": "nom du projet",
            "id": "projet_nom du projet",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "site",
            "component": "nom du site",
            "id": "site_nom du site",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "plateforme",
            "component": "nom de la plateforme",
            "id": "plateforme_nom de la plateforme",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "date",
            "component": "day",
            "id": "date_day",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "profondeur",
            "component": "minimum",
            "id": "profondeur_minimum",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "profondeur",
            "component": "maximum",
            "id": "profondeur_maximum",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "taxon",
            "component": "nom du taxon déterminé",
            "id": "taxon_nom du taxon déterminé",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          }
        ],
        "migrations": {},
        "authorization": {
          "timeScope": {
            "variable": "date",
            "component": "day",
            "id": "date_day",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": null,
              "internationalizedColumns": null,
              "variable": "site",
              "component": "nom du site",
              "variableComponentKey": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            },
            "projet": {
              "internationalizationName": null,
              "internationalizedColumns": null,
              "variable": "projet",
              "component": "nom du projet",
              "variableComponentKey": {
                "variable": "projet",
                "component": "nom du projet",
                "id": "projet_nom du projet",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            }
          },
          "dataGroups": {
            "donnee": {
              "internationalizationName": {
                "en": "Data",
                "fr": "Donnée"
              },
              "internationalizedColumns": null,
              "label": "Donnée",
              "data": [
                "volume sedimente",
                "nombre de cellules par ml",
                "surface de comptage",
                "nombre de champs comptés",
                "nombre d'objets comptés",
                "taxon",
                "biovolume de l'espèce dans l'échantillon",
                "nombre d'objets par ml"
              ]
            },
            "condition": {
              "internationalizationName": {
                "en": "Context",
                "fr": "Contexte"
              },
              "internationalizedColumns": null,
              "label": "Contexte",
              "data": [
                "outil",
                "profondeur"
              ]
            },
            "referentiel": {
              "internationalizationName": {
                "en": "Referential",
                "fr": "Référentiel"
              },
              "internationalizedColumns": null,
              "label": "Référentiel",
              "data": [
                "date",
                "site",
                "projet",
                "plateforme"
              ]
            }
          },
          "columnsDescription": {
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "admin",
              "withPeriods": false,
              "withDataGroups": false
            },
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "depot",
              "withPeriods": false,
              "withDataGroups": false
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "delete",
              "withPeriods": false,
              "withDataGroups": false
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "extraction",
              "withPeriods": true,
              "withDataGroups": true
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "publication",
              "withPeriods": false,
              "withDataGroups": false
            }
          },
          "internationalization": {
            "dataGroups": {
              "condition": {
                "internationalizationName": {
                  "en": "Context",
                  "fr": "Contexte"
                }
              },
              "referentiel": {
                "internationalizationName": {
                  "en": "Referential",
                  "fr": "Référentiel"
                }
              },
              "donnee": {
                "internationalizationName": {
                  "en": "Data",
                  "fr": "Donnée"
                }
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": null
              },
              "projet": {
                "internationalizationName": null
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          }
        },
        "repository": {
          "filePattern": "(.*)!(.*)_phytoplancton_(.*)_(.*).csv",
          "authorizationScope": {
            "site": 2,
            "projet": 1
          },
          "startDate": {
            "token": 3
          },
          "endDate": {
            "token": 4
          }
        },
        "tags": []
      },
      "physico-chimie": {
        "internationalizationName": {
          "en": "Chemical Physics",
          "fr": "Physico Chimie"
        },
        "internationalizedColumns": null,
        "internationalizationDisplays": null,
        "format": {
          "headerLine": 1,
          "firstRowLine": 2,
          "separator": ";",
          "columns": [
            {
              "header": "nom du projet",
              "boundTo": {
                "variable": "projet",
                "component": "nom du projet",
                "id": "projet_nom du projet",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom du site",
              "boundTo": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom de la plateforme",
              "boundTo": {
                "variable": "plateforme",
                "component": "nom de la plateforme",
                "id": "plateforme_nom de la plateforme",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "date de prelevement",
              "boundTo": {
                "variable": "date",
                "component": "day",
                "id": "date_day",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "date de debut de campagne",
              "boundTo": {
                "variable": "date",
                "component": "day",
                "id": "date_day",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "date de fin de campagne",
              "boundTo": {
                "variable": "date",
                "component": "day",
                "id": "date_day",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "date de reception",
              "boundTo": {
                "variable": "date",
                "component": "day",
                "id": "date_day",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "outil de prelevement",
              "boundTo": {
                "variable": "outil",
                "component": "prélèvement",
                "id": "outil_prélèvement",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "profondeur minimum",
              "boundTo": {
                "variable": "profondeur",
                "component": "minimum",
                "id": "profondeur_minimum",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "profondeur maximum",
              "boundTo": {
                "variable": "profondeur",
                "component": "maximum",
                "id": "profondeur_maximum",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "profondeur réelle",
              "boundTo": {
                "variable": "profondeur",
                "component": "réelle",
                "id": "profondeur_réelle",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom de la variable",
              "boundTo": {
                "variable": "data_variable",
                "component": "nom",
                "id": "data_variable_nom",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "valeur de la variable",
              "boundTo": {
                "variable": "data_variable",
                "component": "values",
                "id": "data_variable_values",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            }
          ],
          "repeatedColumns": [],
          "constants": [],
          "allowUnexpectedColumns": false
        },
        "data": {
          "date": {
            "chartDescription": null,
            "components": {
              "day": {
                "checker": {
                  "name": "Date",
                  "params": {
                    "pattern": "dd/MM/yyyy",
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "site": {
            "chartDescription": null,
            "components": {
              "nom du site": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "ref_site",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.ref_site.find({it.naturalKey.equals(datum.site['nom du site'])}).hierarchicalKey;\n",
                        "references": [
                          "ref_site"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "outil": {
            "chartDescription": null,
            "components": {
              "prélèvement": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "tool",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "return references.tool.find({it.refValues[\"nom de l'outil de mesure_fr\"].equalsIgnoreCase(datum.outil['prélèvement'])}).hierarchicalKey;\n",
                        "references": [
                          "tool"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "projet": {
            "chartDescription": null,
            "components": {
              "nom du projet": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "project",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.project.find({it.naturalKey.equals(datum.projet['nom du projet'])}).hierarchicalKey;\n",
                        "references": [
                          "project"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "plateforme": {
            "chartDescription": null,
            "components": {
              "nom de la plateforme": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "platform",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "return references.platform.find({it.refValues['nom de la plateforme_key'].equalsIgnoreCase(datum.plateforme['nom de la plateforme'])}).naturalKey;\n",
                        "references": [
                          "platform"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "profondeur": {
            "chartDescription": null,
            "components": {
              "unité": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "return \"mètre\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "maximum": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.profondeur['maximum'].replaceAll(',','.'); String dataTypes = 'physico_chimie'; String site = datum.site['nom du site']; String variable = 'profondeur_mesuree'; Object valeurTrouve = '' ? '' : references.controle_coherence\n        .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n        .findAll({ it.refValues['nom de la variable'].equals(variable) })\n        .find({ it.refValues['nom du site'].equalsIgnoreCase(site.split(\"\\\\.\")[1]) });\nif(valeurTrouve != null) {\n  if(valeurTrouve.find({valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n  } else {\n      return valeur;\n  }\n} else {\n  return valeur;\n}\n",
                        "references": [
                          "controle_coherence"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "minimum": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.profondeur['minimum'].replaceAll(',','.'); String dataTypes = 'physico_chimie'; String site = datum.site['nom du site']; String variable = 'profondeur_mesuree'; Object valeurTrouve = '' ? '' : references.controle_coherence\n        .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n        .findAll({ it.refValues['nom de la variable'].equals(variable) })\n        .find({ it.refValues['nom du site'].equalsIgnoreCase(site.split(\"\\\\.\")[1]) });\nif(valeurTrouve != null) {\n  if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n  } else {\n    return valeur;\n  }\n} else {\n  return valeur;\n}\n",
                        "references": [
                          "controle_coherence"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "réelle": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "data_variable": {
            "chartDescription": {
              "value": "values",
              "aggregation": {
                "variable": "data_variable",
                "component": "nom",
                "id": "data_variable_nom",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "unit": "unit",
              "gap": "1 DAY",
              "standardDeviation": null
            },
            "components": {
              "nom": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "ref_variable",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "if( references.ref_variable.find({ it.refValues['nom de la variable_fr'].equalsIgnoreCase(datum.data_variable['nom']) }) ) {\n    return references.ref_variable.find({ it.refValues['nom de la variable_fr'].equalsIgnoreCase(datum.data_variable['nom']) }).naturalKey;\n} else if (datum.data_variable['nom'].substring(datum.data_variable['nom'].length()-1).equals(' ')) {\n    return references.ref_variable.find({ it.refValues['nom de la variable_fr'].equalsIgnoreCase(datum.data_variable['nom'].substring(0, datum.data_variable['nom'].length()-1)) }).naturalKey;\n}  else if (references.ref_variable.find({ it.naturalKey.equalsIgnoreCase( datum.data_variable['nom']) }) ) {\n  return references.ref_variable.find({ it.naturalKey.equalsIgnoreCase(datum.data_variable['nom']) }).naturalKey;\n}\n",
                        "references": [
                          "ref_variable"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "unit": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "Map variable_unit = [\n  \"ph\": \"no_unit\",\n  \"fer\": \"microgramme_par_litre\",\n  \"zinc\": \"microgramme_par_litre\",\n  \"etain\": \"microgramme_par_litre\",\n  \"plomb\": \"microgramme_par_litre\",\n  \"argent\": \"microgramme_par_litre\",\n  \"chrome\": \"microgramme_par_litre\",\n  \"cuivre\": \"microgramme_par_litre\",\n  \"nickel\": \"microgramme_par_litre\",\n  \"sodium\": \"milligramme_par_litre\",\n  \"arsenic\": \"microgramme_par_litre\",\n  \"cadmium\": \"microgramme_par_litre\",\n  \"calcium\": \"milligramme_par_litre\",\n  \"mercure\": \"microgramme_par_litre\",\n  \"selenium\": \"microgramme_par_litre\",\n  \"sulfates\": \"milligramme_par_litre\",\n  \"aluminium\": \"microgramme_par_litre\",\n  \"chlorures\": \"milligramme_par_litre\",\n  \"magnesium\": \"milligramme_par_litre\",\n  \"manganese\": \"microgramme_par_litre\",\n  \"molybdene\": \"milligramme_par_litre\",\n  \"potassium\": \"milligramme_par_litre\",\n  \"strontium\": \"milligramme_par_litre\",\n  \"azote_total\": \"milligramme_par_litre\",\n  \"bicarbonate\": \"milliequivalent_par_litre\",\n  \"temperature\": \"degres_celsius\",\n  \"conductivite\": \"microsiemens_par_centimetre\",\n  \"azote_ammonium\": \"milligramme_par_litre\",\n  \"azote_nitrates\": \"milligramme_par_litre\",\n  \"azote_nitrites\": \"milligramme_par_litre\",\n  \"balance_ionique\": \"pourcentage\",\n  \"microcystine_lr\": \"microgramme_par_litre\",\n  \"microcystine_rr\": \"microgramme_par_litre\",\n  \"oxygene_dissous\": \"milligramme_par_litre\",\n  \"phosphore_total\": \"milligramme_par_litre\",\n  \"silice_reactive\": \"milligramme_par_litre\",\n  \"azote_total_filtre\": \"milligramme_par_litre\",\n  \"indice_aromaticite\": \"unite_dabsorbance_par_milligramme_de_carbone_par_litre_et_par_centimetre\",\n  \"profondeur_maximum\": \"metre\",\n  \"profondeur_mesuree\": \"metre\",\n  \"profondeur_minimum\": \"metre\",\n  \"transmission_des_uv\": \"pourcentage\",\n  \"matieres_decantables\": \"milligramme_par_litre\",\n  \"titre_alcalimetrique\": \"milliequivalent_par_litre\",\n  \"matieres_en_suspension\": \"milligramme_par_litre\",\n  \"phosphore_particulaire\": \"milligramme_par_litre\",\n  \"phosphore_total_filtre\": \"milligramme_par_litre\",\n  \"carbone_organique_total\": \"milligramme_par_litre\",\n  \"debit_moyen_hebdomadaire\": \"metre_cube_par_seconde\",\n  \"carbone_organique_dissous\": \"milligramme_par_litre\",\n  \"phosphore_orthophosphates\": \"milligramme_par_litre\",\n  \"demande_chimique_en_oxygene\": \"milligramme_par_litre\",\n  \"residu_sec_a_105DEGREESIGNc\": \"milligramme_par_litre\",\n  \"azote_organique_particulaire\": \"milligramme_par_litre\",\n  \"titre_alcalimetrique_complet\": \"milliequivalent_par_litre\",\n  \"carbone_organique_particulaire\": \"milligramme_par_litre\",\n  \"matieres_en_suspension_organiques\": \"milligramme_par_litre\",\n  \"perte_entre_550_et_1000DEGREESIGNc\": \"partie_par_million\",\n  \"residu_sec_a_110_et_550DEGREESIGNc\": \"milligramme_par_litre\",\n  \"demande_biologique_en_oxygene_en_5_jours\": \"milligramme_par_litre\"\n]; references.ref_variable.refValues['nom de la variable_fr']; datum.data_variable['nom']; String variable = references.ref_variable.find({ it.naturalKey.equals(datum.data_variable['nom']) }).naturalKey; return variable_unit[variable];\n",
                        "references": [
                          "ref_variable"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "values": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.data_variable['values'].replaceAll(',','.'); String dataTypes = 'physico_chimie'; String site = datum.site['nom du site']; String variable = datum.data_variable['nom']; if(references.controle_coherence\n    .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n    .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) }).size()!=0 && valeur!=\"\") {\n  Object valeurTrouve = '' ? '' : references.controle_coherence\n      .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n      .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) })\n      .find({ it.refValues['nom du site'].equals(site.split(\"\\\\.\")[1]) });\n  \n  if(valeurTrouve != null) {\n    if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n    } else if(valeurTrouve.find({ valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n    } else {\n      return valeur;\n    }\n  } else {\n    return valeur;\n  }\n} else {\n    return valeur;\n}\n",
                        "references": [
                          "controle_coherence"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          }
        },
        "validations": {},
        "uniqueness": [
          {
            "variable": "projet",
            "component": "nom du projet",
            "id": "projet_nom du projet",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "site",
            "component": "nom du site",
            "id": "site_nom du site",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "plateforme",
            "component": "nom de la plateforme",
            "id": "plateforme_nom de la plateforme",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "date",
            "component": "day",
            "id": "date_day",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "outil",
            "component": "prélèvement",
            "id": "outil_prélèvement",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "profondeur",
            "component": "minimum",
            "id": "profondeur_minimum",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "data_variable",
            "component": "nom",
            "id": "data_variable_nom",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          }
        ],
        "migrations": {},
        "authorization": {
          "timeScope": {
            "variable": "date",
            "component": "day",
            "id": "date_day",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": null,
              "internationalizedColumns": null,
              "variable": "site",
              "component": "nom du site",
              "variableComponentKey": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            },
            "projet": {
              "internationalizationName": null,
              "internationalizedColumns": null,
              "variable": "projet",
              "component": "nom du projet",
              "variableComponentKey": {
                "variable": "projet",
                "component": "nom du projet",
                "id": "projet_nom du projet",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            }
          },
          "dataGroups": {
            "condition": {
              "internationalizationName": {
                "en": "Context",
                "fr": "Contexte"
              },
              "internationalizedColumns": null,
              "label": "Contexte",
              "data": [
                "date",
                "outil",
                "profondeur"
              ]
            },
            "referentiel": {
              "internationalizationName": {
                "en": "Referential",
                "fr": "Référentiel"
              },
              "internationalizedColumns": null,
              "label": "Référentiel",
              "data": [
                "site",
                "projet",
                "plateforme"
              ]
            },
            "dataGroup_variable": {
              "internationalizationName": {
                "en": "Data",
                "fr": "Données"
              },
              "internationalizedColumns": null,
              "label": "Données",
              "data": [
                "data_variable"
              ]
            }
          },
          "columnsDescription": {
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "admin",
              "withPeriods": false,
              "withDataGroups": false
            },
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "depot",
              "withPeriods": false,
              "withDataGroups": false
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "delete",
              "withPeriods": false,
              "withDataGroups": false
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "extraction",
              "withPeriods": true,
              "withDataGroups": true
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "publication",
              "withPeriods": false,
              "withDataGroups": false
            }
          },
          "internationalization": {
            "dataGroups": {
              "condition": {
                "internationalizationName": {
                  "en": "Context",
                  "fr": "Contexte"
                }
              },
              "referentiel": {
                "internationalizationName": {
                  "en": "Referential",
                  "fr": "Référentiel"
                }
              },
              "dataGroup_variable": {
                "internationalizationName": {
                  "en": "Data",
                  "fr": "Données"
                }
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": null
              },
              "projet": {
                "internationalizationName": null
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          }
        },
        "repository": {
          "filePattern": "(.*)!(.*)_physico_chimie_(.*)_(.*).csv",
          "authorizationScope": {
            "site": 2,
            "projet": 1
          },
          "startDate": {
            "token": 3
          },
          "endDate": {
            "token": 4
          }
        },
        "tags": []
      },
      "haute_frequence": {
        "internationalizationName": {
          "en": null,
          "fr": "Haute Fréquence"
        },
        "internationalizedColumns": null,
        "internationalizationDisplays": null,
        "format": {
          "headerLine": 1,
          "firstRowLine": 2,
          "separator": ";",
          "columns": [
            {
              "header": "nom du projet",
              "boundTo": {
                "variable": "projet",
                "component": "nom du projet",
                "id": "projet_nom du projet",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom du site",
              "boundTo": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom de la plateforme",
              "boundTo": {
                "variable": "plateforme",
                "component": "nom de la plateforme",
                "id": "plateforme_nom de la plateforme",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "date de prélèvement",
              "boundTo": {
                "variable": "date",
                "component": "day",
                "id": "date_day",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "outil de mesure",
              "boundTo": {
                "variable": "outil",
                "component": "mesure",
                "id": "outil_mesure",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "commentaire",
              "boundTo": {
                "variable": "commentaire",
                "component": "value",
                "id": "commentaire_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "heure",
              "boundTo": {
                "variable": "date",
                "component": "time",
                "id": "date_time",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "profondeur",
              "boundTo": {
                "variable": "profondeur",
                "component": "value",
                "id": "profondeur_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "temperature",
              "boundTo": {
                "variable": "temperature",
                "component": "value",
                "id": "temperature_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "qualite temperature",
              "boundTo": {
                "variable": "temperature",
                "component": "quality",
                "id": "temperature_quality",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "pression",
              "boundTo": {
                "variable": "pression",
                "component": "value",
                "id": "pression_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            }
          ],
          "repeatedColumns": [],
          "constants": [],
          "allowUnexpectedColumns": false
        },
        "data": {
          "date": {
            "chartDescription": null,
            "components": {
              "day": {
                "checker": {
                  "name": "Date",
                  "params": {
                    "pattern": "dd/MM/yyyy",
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "time": {
                "checker": {
                  "name": "Date",
                  "params": {
                    "pattern": "HH:mm:ss",
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "datetime": {
                "checker": {
                  "name": "Date",
                  "params": {
                    "pattern": "dd/MM/yyyy HH:mm:ss",
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "return datum.date.day +\" \" +datum.date.time",
                  "references": [],
                  "datatypes": []
                }
              }
            },
            "computedComponents": {}
          },
          "site": {
            "chartDescription": null,
            "components": {
              "nom du site": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "ref_site",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.ref_site.find({it.naturalKey.equals(datum.site['nom du site'])}).hierarchicalKey;\n",
                        "references": [
                          "ref_site"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "outil": {
            "chartDescription": null,
            "components": {
              "mesure": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "tool",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "return references.tool.find({it.refValues[\"nom de l'outil de mesure_fr\"].equalsIgnoreCase(datum.outil['mesure'])}).naturalKey;\n",
                        "references": [
                          "tool"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "projet": {
            "chartDescription": null,
            "components": {
              "nom du projet": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "project",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.project.find({it.naturalKey.equals(datum.projet['nom du projet'])}).hierarchicalKey;\n",
                        "references": [
                          "project"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "pression": {
            "chartDescription": null,
            "components": {
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "plateforme": {
            "chartDescription": null,
            "components": {
              "nom de la plateforme": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "platform",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "return references.platform.find({it.refValues['nom de la plateforme_key'].equalsIgnoreCase(datum.plateforme['nom de la plateforme'])}).hierarchicalKey;\n",
                        "references": [
                          "platform"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "profondeur": {
            "chartDescription": null,
            "components": {
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "commentaire": {
            "chartDescription": null,
            "components": {
              "value": null
            },
            "computedComponents": {}
          },
          "temperature": {
            "chartDescription": null,
            "components": {
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "quality": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          }
        },
        "validations": {},
        "uniqueness": [
          {
            "variable": "date",
            "component": "datetime",
            "id": "date_datetime",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "projet",
            "component": "nom du projet",
            "id": "projet_nom du projet",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "site",
            "component": "nom du site",
            "id": "site_nom du site",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "plateforme",
            "component": "nom de la plateforme",
            "id": "plateforme_nom de la plateforme",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "profondeur",
            "component": "value",
            "id": "profondeur_value",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "outil",
            "component": "mesure",
            "id": "outil_mesure",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          }
        ],
        "migrations": {},
        "authorization": {
          "timeScope": {
            "variable": "date",
            "component": "datetime",
            "id": "date_datetime",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": null,
              "internationalizedColumns": null,
              "variable": "site",
              "component": "nom du site",
              "variableComponentKey": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            },
            "projet": {
              "internationalizationName": null,
              "internationalizedColumns": null,
              "variable": "projet",
              "component": "nom du projet",
              "variableComponentKey": {
                "variable": "projet",
                "component": "nom du projet",
                "id": "projet_nom du projet",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            }
          },
          "dataGroups": {
            "all": {
              "internationalizationName": null,
              "internationalizedColumns": null,
              "label": "Toutes les données",
              "data": [
                "date",
                "site",
                "outil",
                "projet",
                "profondeur",
                "temperature",
                "pression",
                "plateforme",
                "commentaire"
              ]
            }
          },
          "columnsDescription": {
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "admin",
              "withPeriods": false,
              "withDataGroups": false
            },
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "depot",
              "withPeriods": false,
              "withDataGroups": false
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "delete",
              "withPeriods": false,
              "withDataGroups": false
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "extraction",
              "withPeriods": true,
              "withDataGroups": true
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "publication",
              "withPeriods": false,
              "withDataGroups": false
            }
          },
          "internationalization": {
            "dataGroups": {
              "all": {
                "internationalizationName": null
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": null
              },
              "projet": {
                "internationalizationName": null
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          }
        },
        "repository": {
          "filePattern": "(.*)!(.*)_haute_frequence_(.*)_(.*).csv",
          "authorizationScope": {
            "site": 2,
            "projet": 1
          },
          "startDate": {
            "token": 3
          },
          "endDate": {
            "token": 4
          }
        },
        "tags": []
      },
      "production_primaire": {
        "internationalizationName": {
          "en": null,
          "fr": "Production primaire"
        },
        "internationalizedColumns": null,
        "internationalizationDisplays": null,
        "format": {
          "headerLine": 1,
          "firstRowLine": 2,
          "separator": ";",
          "columns": [
            {
              "header": "nom du projet",
              "boundTo": {
                "variable": "projet",
                "component": "nom du projet",
                "id": "projet_nom du projet",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom du site",
              "boundTo": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom de la plateforme",
              "boundTo": {
                "variable": "plateforme",
                "component": "nom de la plateforme",
                "id": "plateforme_nom de la plateforme",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "date de prélèvement",
              "boundTo": {
                "variable": "date",
                "component": "day",
                "id": "date_day",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "profondeur",
              "boundTo": {
                "variable": "profondeur",
                "component": "value",
                "id": "profondeur_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "heure debut d'incubation",
              "boundTo": {
                "variable": "incubation",
                "component": "heure debut",
                "id": "incubation_heure debut",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "heure fin d'incubation",
              "boundTo": {
                "variable": "incubation",
                "component": "heure fin",
                "id": "incubation_heure fin",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "duree d'incubation",
              "boundTo": {
                "variable": "incubation",
                "component": "duree",
                "id": "incubation_duree",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "production primaire par duree d'incubation reelle",
              "boundTo": {
                "variable": "production primaire",
                "component": "duree d_incubation reelle",
                "id": "production primaire_duree d_incubation reelle",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "production primaire par heure",
              "boundTo": {
                "variable": "production primaire",
                "component": "heure",
                "id": "production primaire_heure",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "production primaire par tiers median",
              "boundTo": {
                "variable": "production primaire",
                "component": "tiers median",
                "id": "production primaire_tiers median",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            }
          ],
          "repeatedColumns": [],
          "constants": [],
          "allowUnexpectedColumns": false
        },
        "data": {
          "date": {
            "chartDescription": null,
            "components": {
              "day": {
                "checker": {
                  "name": "Date",
                  "params": {
                    "pattern": "dd/MM/yyyy",
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "site": {
            "chartDescription": null,
            "components": {
              "nom du site": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "ref_site",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.ref_site.find({it.naturalKey.equals(datum.site['nom du site'])}).hierarchicalKey;\n",
                        "references": [
                          "ref_site"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "projet": {
            "chartDescription": null,
            "components": {
              "nom du projet": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "project",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.project.find({it.naturalKey.equals(datum.projet['nom du projet'])}).hierarchicalKey;\n",
                        "references": [
                          "project"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "incubation": {
            "chartDescription": null,
            "components": {
              "duree": {
                "checker": {
                  "name": "Date",
                  "params": {
                    "pattern": "HH:MM",
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "heure fin": {
                "checker": {
                  "name": "Date",
                  "params": {
                    "pattern": "HH:MM",
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "heure debut": {
                "checker": {
                  "name": "Date",
                  "params": {
                    "pattern": "HH:MM",
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "plateforme": {
            "chartDescription": null,
            "components": {
              "nom de la plateforme": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "platform",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "return references.platform.find({it.refValues['nom de la plateforme_key'].equalsIgnoreCase(datum.plateforme['nom de la plateforme'])}).naturalKey;\n",
                        "references": [
                          "platform"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "profondeur": {
            "chartDescription": null,
            "components": {
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "production primaire": {
            "chartDescription": null,
            "components": {
              "heure": null,
              "tiers median": null,
              "duree d_incubation reelle": null
            },
            "computedComponents": {}
          }
        },
        "validations": {},
        "uniqueness": [
          {
            "variable": "date",
            "component": "day",
            "id": "date_day",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "projet",
            "component": "nom du projet",
            "id": "projet_nom du projet",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "site",
            "component": "nom du site",
            "id": "site_nom du site",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "plateforme",
            "component": "nom de la plateforme",
            "id": "plateforme_nom de la plateforme",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "profondeur",
            "component": "value",
            "id": "profondeur_value",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "incubation",
            "component": "heure debut",
            "id": "incubation_heure debut",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "incubation",
            "component": "heure fin",
            "id": "incubation_heure fin",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "incubation",
            "component": "duree",
            "id": "incubation_duree",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          }
        ],
        "migrations": {},
        "authorization": {
          "timeScope": {
            "variable": "date",
            "component": "day",
            "id": "date_day",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": null,
              "internationalizedColumns": null,
              "variable": "site",
              "component": "nom du site",
              "variableComponentKey": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            },
            "projet": {
              "internationalizationName": null,
              "internationalizedColumns": null,
              "variable": "projet",
              "component": "nom du projet",
              "variableComponentKey": {
                "variable": "projet",
                "component": "nom du projet",
                "id": "projet_nom du projet",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            }
          },
          "dataGroups": {
            "condition": {
              "internationalizationName": {
                "en": "Context",
                "fr": "Contexte"
              },
              "internationalizedColumns": null,
              "label": "Contexte",
              "data": [
                "profondeur",
                "incubation",
                "production primaire"
              ]
            },
            "referentiel": {
              "internationalizationName": {
                "en": "Referential",
                "fr": "Référentiel"
              },
              "internationalizedColumns": null,
              "label": "Référentiel",
              "data": [
                "date",
                "site",
                "projet",
                "plateforme"
              ]
            }
          },
          "columnsDescription": {
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "admin",
              "withPeriods": false,
              "withDataGroups": false
            },
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "depot",
              "withPeriods": false,
              "withDataGroups": false
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "delete",
              "withPeriods": false,
              "withDataGroups": false
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "extraction",
              "withPeriods": true,
              "withDataGroups": true
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "publication",
              "withPeriods": false,
              "withDataGroups": false
            }
          },
          "internationalization": {
            "dataGroups": {
              "condition": {
                "internationalizationName": {
                  "en": "Context",
                  "fr": "Contexte"
                }
              },
              "referentiel": {
                "internationalizationName": {
                  "en": "Referential",
                  "fr": "Référentiel"
                }
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": null
              },
              "projet": {
                "internationalizationName": null
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          }
        },
        "repository": {
          "filePattern": "(.*)!(.*)_production_primaire_(.*)_(.*).csv",
          "authorizationScope": {
            "site": 2,
            "projet": 1
          },
          "startDate": {
            "token": 3
          },
          "endDate": {
            "token": 4
          }
        },
        "tags": []
      },
      "sonde_multiparametres": {
        "internationalizationName": {
          "en": "Probe data",
          "fr": "Sonde multi-paramètres"
        },
        "internationalizedColumns": null,
        "internationalizationDisplays": null,
        "format": {
          "headerLine": 1,
          "firstRowLine": 2,
          "separator": ";",
          "columns": [
            {
              "header": "nom du projet",
              "boundTo": {
                "variable": "projet",
                "component": "nom du projet",
                "id": "projet_nom du projet",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom du site",
              "boundTo": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom de la plateforme",
              "boundTo": {
                "variable": "plateforme",
                "component": "nom de la plateforme",
                "id": "plateforme_nom de la plateforme",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "date de prélèvement",
              "boundTo": {
                "variable": "date",
                "component": "day",
                "id": "date_day",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "outil de mesure",
              "boundTo": {
                "variable": "outil",
                "component": "prélèvement",
                "id": "outil_prélèvement",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "commentaire sonde",
              "boundTo": {
                "variable": "commentaire",
                "component": "value",
                "id": "commentaire_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "heure",
              "boundTo": {
                "variable": "date",
                "component": "time",
                "id": "date_time",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "profondeur",
              "boundTo": {
                "variable": "profondeur",
                "component": "value",
                "id": "profondeur_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "température",
              "boundTo": {
                "variable": "temperature",
                "component": "value",
                "id": "temperature_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "chl a",
              "boundTo": {
                "variable": "chl",
                "component": "a",
                "id": "chl_a",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "pH brut",
              "boundTo": {
                "variable": "ph",
                "component": "brut",
                "id": "ph_brut",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "pH tc",
              "boundTo": {
                "variable": "ph",
                "component": "tc",
                "id": "ph_tc",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "cond25degres",
              "boundTo": {
                "variable": "cond25",
                "component": "degres",
                "id": "cond25_degres",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "oxygene mg",
              "boundTo": {
                "variable": "oxygene_mg",
                "component": "value",
                "id": "oxygene_mg_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "oxygene saturation",
              "boundTo": {
                "variable": "oxygene_saturation",
                "component": "value",
                "id": "oxygene_saturation_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "turbidite",
              "boundTo": {
                "variable": "turbidite",
                "component": "value",
                "id": "turbidite_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "trans",
              "boundTo": {
                "variable": "trans",
                "component": "value",
                "id": "trans_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "par w",
              "boundTo": {
                "variable": "par_w",
                "component": "value",
                "id": "par_w_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "par a",
              "boundTo": {
                "variable": "par_a",
                "component": "value",
                "id": "par_a_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            }
          ],
          "repeatedColumns": [],
          "constants": [],
          "allowUnexpectedColumns": true
        },
        "data": {
          "ph": {
            "chartDescription": {
              "value": "tc",
              "aggregation": null,
              "unit": "unit",
              "gap": "1 DAY",
              "standardDeviation": null
            },
            "components": {
              "tc": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.ph['tc'].replaceAll(',','.'); String dataTypes = 'sonde_multiparametres'; String site = datum.site['nom du site']; String variable = 'ph tc'; if(references.controle_coherence\n      .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n      .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) }).size()!=0 && valeur!=\"\"){\n  Object valeurTrouve = '' ? '' : references.controle_coherence\n          .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n          .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) })\n          .find({ it.refValues['nom du site'].equals(site.split(\"\\\\.\")[1]) });\n  if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n  } else if(valeurTrouve.find({ valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n  } else {\n      return valeur;\n  }\n} else {\n  return valeur;\n}\n",
                        "references": [
                          "controle_coherence"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "brut": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.ph['brut'].replaceAll(',','.'); String dataTypes = 'sonde_multiparametres'; String site = datum.site['nom du site']; String variable = 'ph_brut'; if(references.controle_coherence\n      .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n      .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) }).size()!=0 && valeur!=\"\" && valeur!=\" \"){\n  Object valeurTrouve = '' ? '' : references.controle_coherence\n          .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n          .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) })\n          .find({ it.refValues['nom du site'].equalsIgnoreCase(site) });\n  if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n  } else if(valeurTrouve.find({ valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n  } else {\n      return valeur;\n  }\n} else {\n  return valeur;\n}\n",
                        "references": [
                          "controle_coherence"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"no_unit\"",
                  "references": [],
                  "datatypes": []
                }
              }
            },
            "computedComponents": {}
          },
          "chl": {
            "chartDescription": {
              "value": "a",
              "aggregation": null,
              "unit": "unit",
              "gap": "1 DAY",
              "standardDeviation": null
            },
            "components": {
              "a": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.chl['a'].replaceAll(',','.'); String dataTypes = 'sonde_multiparametres'; String site = datum.site['nom du site']; String variable = 'chl_a'; if(references.controle_coherence\n      .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n      .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) }).size()!=0 && valeur!=\"\" && valeur!=\" \"){\n  Object valeurTrouve = '' ? '' : references.controle_coherence\n          .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n          .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) })\n          .find({ it.refValues['nom du site'].equalsIgnoreCase(site) });\n  if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n  } else if(valeurTrouve.find({ valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n  } else {\n      return valeur;\n  }\n} else {\n  return valeur;\n}\n",
                        "references": [
                          "controle_coherence"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"milligramme_par_metre_cube\"",
                  "references": [],
                  "datatypes": []
                }
              }
            },
            "computedComponents": {}
          },
          "date": {
            "chartDescription": null,
            "components": {
              "day": {
                "checker": {
                  "name": "Date",
                  "params": {
                    "pattern": "dd/MM/yyyy",
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "time": {
                "checker": {
                  "name": "Date",
                  "params": {
                    "pattern": "HH:mm:ss",
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "site": {
            "chartDescription": null,
            "components": {
              "nom du site": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "ref_site",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.ref_site.find({it.naturalKey.equals(datum.site['nom du site'])}).hierarchicalKey;\n",
                        "references": [
                          "ref_site"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "outil": {
            "chartDescription": null,
            "components": {
              "prélèvement": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "tool",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "return references.tool.find({it.refValues[\"nom de l'outil de mesure_fr\"].equalsIgnoreCase(datum.outil['prélèvement'])}).hierarchicalKey;\n",
                        "references": [
                          "tool"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "par_a": {
            "chartDescription": {
              "value": "value",
              "aggregation": null,
              "unit": "unit",
              "gap": "1 DAY",
              "standardDeviation": null
            },
            "components": {
              "unite": {
                "checker": null,
                "defaultValue": {
                  "expression": "\"micro_ensteins\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.par_a['value'].replaceAll(',','.');  String dataTypes = 'sonde_multiparametres';  String site = datum.site['nom du site'];  String variable = 'par_a'; if(references.controle_coherence\n      .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n      .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) }).size()!=0  && valeur!=\"\" && valeur!=\" \") {\n  Object valeurTrouve = '' ? '' : references.controle_coherence\n          .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n          .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) })\n          .find({ it.refValues['nom du site'].equals(site.split(\"\\\\.\")[1]) });\n  if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n  } else if(valeurTrouve.find({ valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n  } else {\n      return valeur;\n  }\n} else {\n  return valeur;\n}\n",
                        "references": [
                          "controle_coherence"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "par_w": {
            "chartDescription": {
              "value": "value",
              "aggregation": null,
              "unit": "unit",
              "gap": "1 DAY",
              "standardDeviation": null
            },
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"micro_ensteins\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.par_w['value'].replaceAll(',','.');  String dataTypes = 'sonde_multiparametres';  String site = datum.site['nom du site'];  String variable = 'par_w'; if(references.controle_coherence\n      .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n      .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) }).size()!=0  && valeur!=\"\" && valeur!=\" \") {\n  Object valeurTrouve = '' ? '' : references.controle_coherence\n          .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n          .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) })\n          .find({ it.refValues['nom du site'].equals(site.split(\"\\\\.\")[1]) });\n  if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n  } else if(valeurTrouve.find({ valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n  } else {\n      return valeur;\n  }\n} else {\n  return valeur;\n}\n",
                        "references": [
                          "controle_coherence"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "trans": {
            "chartDescription": {
              "value": "value",
              "aggregation": null,
              "unit": "unit",
              "gap": "1 DAY",
              "standardDeviation": null
            },
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"pourcentage\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.trans['value'].replaceAll(',','.'); String dataTypes = 'sonde_multiparametres'; String site = datum.site['nom du site']; String variable = 'trans'; if(references.controle_coherence\n      .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n      .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) }).size()!=0  && valeur!=\"\" && valeur!=\" \") {\n  Object valeurTrouve = '' ? '' : references.controle_coherence\n          .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n          .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) })\n          .find({ it.refValues['nom du site'].equals(site.split(\"\\\\.\")[1]) });\n  if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n  } else if(valeurTrouve.find({ valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n  } else {\n      return valeur;\n  }\n} else {\n  return valeur;\n}\n",
                        "references": [
                          "controle_coherence"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "cond25": {
            "chartDescription": {
              "value": "degres",
              "aggregation": null,
              "unit": "unit",
              "gap": "1 DAY",
              "standardDeviation": null
            },
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"millisiemens_par_centimetre\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "degres": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.cond25['degres'].replaceAll(',','.'); String dataTypes = 'sonde_multiparametres'; String site = datum.site['nom du site']; String variable = 'cond25degres'; if(references.controle_coherence\n      .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n      .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) }).size()!=0 && valeur!=\"\" && valeur!=\" \"){\n  Object valeurTrouve = '' ? '' : references.controle_coherence\n          .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n          .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) })\n          .find({ it.refValues['nom du site'].equals(site.split(\"\\\\.\")[1]) });\n  if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n  } else if(valeurTrouve.find({ valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n  } else {\n      return valeur;\n  }\n} else {\n  return valeur;\n}\n",
                        "references": [
                          "controle_coherence"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "projet": {
            "chartDescription": null,
            "components": {
              "nom du projet": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "project",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.project.find({it.naturalKey.equals(datum.projet['nom du projet'])}).hierarchicalKey;\n",
                        "references": [
                          "project"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "turbidite": {
            "chartDescription": {
              "value": "value",
              "aggregation": null,
              "unit": "unit",
              "gap": "1 DAY",
              "standardDeviation": null
            },
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"formazine_turbidite_unit\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.turbidite['value'].replaceAll(',','.'); String dataTypes = 'sonde_multiparametres'; String site = datum.site['nom du site']; String variable = 'turbidite'; if(references.controle_coherence\n      .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n      .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) }).size()!=0  && valeur!=\"\" && valeur!=\" \") {\n  Object valeurTrouve = '' ? '' : references.controle_coherence\n          .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n          .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) })\n          .find({ it.refValues['nom du site'].equals(site.split(\"\\\\.\")[1]) });\n  if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n  } else if(valeurTrouve.find({ valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n  } else {\n      return valeur;\n  }\n} else {\n  return valeur;\n}\n",
                        "references": [
                          "controle_coherence"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "oxygene_mg": {
            "chartDescription": {
              "value": "value",
              "aggregation": null,
              "unit": "unit",
              "gap": "1 DAY",
              "standardDeviation": null
            },
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"milligramme_par_litre\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.oxygene_mg['value'].replaceAll(',','.'); String dataTypes = 'sonde_multiparametres'; String site = datum.site['nom du site']; String variable = 'oxygene_mg'; if(references.controle_coherence\n      .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n      .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) }).size()!=0 && valeur!=\"\" && valeur!=\" \"){\n  Object valeurTrouve = '' ? '' : references.controle_coherence\n          .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n          .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) })\n          .find({ it.refValues['nom du site'].equals(site.split(\"\\\\.\")[1]) });\n  if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n  } else if(valeurTrouve.find({ valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n  } else {\n      return valeur;\n  }\n} else {\n  return valeur;\n}\n",
                        "references": [
                          "controle_coherence"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "plateforme": {
            "chartDescription": null,
            "components": {
              "nom de la plateforme": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "platform",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "return references.platform.find({it.refValues['nom de la plateforme_key'].equalsIgnoreCase(datum.plateforme['nom de la plateforme'])}).hierarchicalKey;\n",
                        "references": [
                          "platform"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "profondeur": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"metre\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.profondeur['value'].replaceAll(',','.'); String dataTypes = 'sonde_multiparametres'; String site = datum.site['nom du site']; String variable = 'profondeur'; if(references.controle_coherence\n      .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n      .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) }).size()!=0 && valeur!=\"\"){\n  Object valeurTrouve = '' ? '' : references.controle_coherence\n          .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n          .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) })\n          .find({ it.refValues['nom du site'].equals(site.split(\"\\\\.\")[1]) });\n  if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n  } else if(valeurTrouve.find({ valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n  } else {\n      return valeur;\n  }\n} else {\n  return valeur;\n}\n",
                        "references": [
                          "controle_coherence"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "commentaire": {
            "chartDescription": null,
            "components": {
              "value": null
            },
            "computedComponents": {}
          },
          "temperature": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"degres_celsius\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.temperature['value'].replaceAll(',','.'); String dataTypes = 'sonde_multiparametres'; String site = datum.site['nom du site']; String variable = 'temperature'; if(references.controle_coherence\n        .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n        .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) }).size()!=0 && valeur!=\"\"){\n    Object valeurTrouve = '' ? '' : references.controle_coherence\n            .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n            .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) })\n            .find({ it.refValues['nom du site'].equals(site.split(\"\\\\.\")[1]) });\n    if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n        throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n    } else if(valeurTrouve.find({ valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n        throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n    } else {\n        return valeur;\n    }\n} else {\n    return valeur;\n}\n",
                        "references": [
                          "controle_coherence"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "oxygene_saturation": {
            "chartDescription": {
              "value": "value",
              "aggregation": null,
              "unit": "unit",
              "gap": "1 DAY",
              "standardDeviation": null
            },
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"pourcentage\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.oxygene_saturation['value'].replaceAll(',','.'); String dataTypes = 'sonde_multiparametres'; String site = datum.site['nom du site']; String variable = 'oxygene_saturation'; if(references.controle_coherence\n      .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n      .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) }).size()!=0 && valeur!=\"\" && valeur!=\" \"){\n  Object valeurTrouve = '' ? '' : references.controle_coherence\n          .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n          .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) })\n          .find({ it.refValues['nom du site'].equals(site.split(\"\\\\.\")[1]) });\n  if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n  } else if(valeurTrouve.find({ valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n      throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n  } else {\n      return valeur;\n  }\n} else {\n  return valeur;\n}\n",
                        "references": [
                          "controle_coherence"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          }
        },
        "validations": {},
        "uniqueness": [],
        "migrations": {},
        "authorization": {
          "timeScope": {
            "variable": "date",
            "component": "day",
            "id": "date_day",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": null,
              "internationalizedColumns": null,
              "variable": "site",
              "component": "nom du site",
              "variableComponentKey": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            },
            "projet": {
              "internationalizationName": null,
              "internationalizedColumns": null,
              "variable": "projet",
              "component": "nom du projet",
              "variableComponentKey": {
                "variable": "projet",
                "component": "nom du projet",
                "id": "projet_nom du projet",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            }
          },
          "dataGroups": {
            "referentiel": {
              "internationalizationName": {
                "en": "Referential",
                "fr": "Référentiel"
              },
              "internationalizedColumns": null,
              "label": "Référentiel",
              "data": [
                "date",
                "site",
                "outil",
                "projet",
                "plateforme"
              ]
            },
            "donnee_prelevement": {
              "internationalizationName": {
                "en": "Data's condition",
                "fr": "Données du prélèvement"
              },
              "internationalizedColumns": null,
              "label": "Données du prélèvement",
              "data": [
                "par_w",
                "oxygene_saturation",
                "chl",
                "oxygene_mg",
                "ph",
                "cond25",
                "par_a",
                "turbidite",
                "trans"
              ]
            },
            "condition_prelevement": {
              "internationalizationName": {
                "en": "Prelevement's condition",
                "fr": "Condition de prélèvement"
              },
              "internationalizedColumns": null,
              "label": "Condition de prélèvement",
              "data": [
                "profondeur",
                "temperature",
                "commentaire"
              ]
            }
          },
          "columnsDescription": {
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "admin",
              "withPeriods": false,
              "withDataGroups": false
            },
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "depot",
              "withPeriods": false,
              "withDataGroups": false
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "delete",
              "withPeriods": false,
              "withDataGroups": false
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "extraction",
              "withPeriods": true,
              "withDataGroups": true
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "publication",
              "withPeriods": false,
              "withDataGroups": false
            }
          },
          "internationalization": {
            "dataGroups": {
              "referentiel": {
                "internationalizationName": {
                  "en": "Referential",
                  "fr": "Référentiel"
                }
              },
              "condition_prelevement": {
                "internationalizationName": {
                  "en": "Prelevement's condition",
                  "fr": "Condition de prélèvement"
                }
              },
              "donnee_prelevement": {
                "internationalizationName": {
                  "en": "Data's condition",
                  "fr": "Données du prélèvement"
                }
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": null
              },
              "projet": {
                "internationalizationName": null
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          }
        },
        "repository": {
          "filePattern": "(.*)!(.*)_sonde_multiparametres_(.*)_(.*).csv",
          "authorizationScope": {
            "site": 2,
            "projet": 1
          },
          "startDate": {
            "token": 3
          },
          "endDate": {
            "token": 4
          }
        },
        "tags": []
      },
      "condition_prelevements": {
        "internationalizationName": {
          "en": "Collection condition",
          "fr": "Condition de prélèvement"
        },
        "internationalizedColumns": null,
        "internationalizationDisplays": null,
        "format": {
          "headerLine": 1,
          "firstRowLine": 2,
          "separator": ";",
          "columns": [
            {
              "header": "nom du projet",
              "boundTo": {
                "variable": "projet",
                "component": "value",
                "id": "projet_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom du site",
              "boundTo": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nom de la plateforme",
              "boundTo": {
                "variable": "site",
                "component": "nom de la plateforme",
                "id": "site_nom de la plateforme",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "date de prélèvement",
              "boundTo": {
                "variable": "date",
                "component": "day",
                "id": "date_day",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "heure de prélèvement",
              "boundTo": {
                "variable": "date",
                "component": "time",
                "id": "date_time",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "commentaire",
              "boundTo": {
                "variable": "commentaire",
                "component": "value",
                "id": "commentaire_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "température de l'air",
              "boundTo": {
                "variable": "temperature",
                "component": "temperature de l'air",
                "id": "temperature_temperature de l'air",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "nébulosité",
              "boundTo": {
                "variable": "qualitatives",
                "component": "nebulosite",
                "id": "qualitatives_nebulosite",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "ensoleillement",
              "boundTo": {
                "variable": "qualitatives",
                "component": "ensoleillement",
                "id": "qualitatives_ensoleillement",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "temps",
              "boundTo": {
                "variable": "qualitatives",
                "component": "temps",
                "id": "qualitatives_temps",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "direction du vent",
              "boundTo": {
                "variable": "qualitatives",
                "component": "direction du vent",
                "id": "qualitatives_direction du vent",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "vitesse du vent",
              "boundTo": {
                "variable": "qualitatives",
                "component": "vitesse du vent",
                "id": "qualitatives_vitesse du vent",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "pression atmosphérique",
              "boundTo": {
                "variable": "pression_atmospherique",
                "component": "value",
                "id": "pression_atmospherique_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "aspect de l'eau",
              "boundTo": {
                "variable": "qualitatives",
                "component": "aspect de l'eau",
                "id": "qualitatives_aspect de l'eau",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "état de surface",
              "boundTo": {
                "variable": "qualitatives",
                "component": "etat de surface",
                "id": "qualitatives_etat de surface",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "transparence par disque inra",
              "boundTo": {
                "variable": "transparence",
                "component": "transparence par disque inra",
                "id": "transparence_transparence par disque inra",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "transparence par secchi 20 cm",
              "boundTo": {
                "variable": "transparence",
                "component": "transparence par secchi",
                "id": "transparence_transparence par secchi",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            },
            {
              "header": "couleur de l'eau",
              "boundTo": {
                "variable": "qualitatives",
                "component": "couleur de l_eau",
                "id": "qualitatives_couleur de l_eau",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              },
              "presenceConstraint": "MANDATORY"
            }
          ],
          "repeatedColumns": [],
          "constants": [],
          "allowUnexpectedColumns": false
        },
        "data": {
          "date": {
            "chartDescription": null,
            "components": {
              "day": {
                "checker": {
                  "name": "Date",
                  "params": {
                    "pattern": "dd/MM/yyyy",
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "time": {
                "checker": {
                  "name": "Date",
                  "params": {
                    "pattern": "HH:mm:ss",
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": null
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "site": {
            "chartDescription": null,
            "components": {
              "nom du site": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "ref_site",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.ref_site.find({it.naturalKey.equals(datum.site['nom du site'])}).hierarchicalKey;\n",
                        "references": [
                          "ref_site"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "nom de la plateforme": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "platform",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "return references.platform.find({it.refValues['nom de la plateforme_key'].equalsIgnoreCase(datum.site['nom de la plateforme'])}).hierarchicalKey;\n",
                        "references": [
                          "platform"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "projet": {
            "chartDescription": null,
            "components": {
              "value": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "project",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "return references.project.find({it.naturalKey.equals(datum.projet['value'])}).hierarchicalKey;\n",
                        "references": [
                          "project"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "commentaire": {
            "chartDescription": null,
            "components": {
              "value": null
            },
            "computedComponents": {}
          },
          "temperature": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"degres_celsius\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "temperature de l'air": null
            },
            "computedComponents": {}
          },
          "qualitatives": {
            "chartDescription": null,
            "components": {
              "temps": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "valeurs_qualitative",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "String nom_qualitative = datum.qualitatives['temps'];\n  return nom_qualitative == '' ? '' : references.valeurs_qualitative\n          .findAll({ it.refValues['nom_key'].equals('temps') })\n          .find({ it.naturalKey.split('__')[1].equalsIgnoreCase(nom_qualitative) }).naturalKey;\n",
                        "references": [
                          "valeurs_qualitative"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "nebulosite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "valeurs_qualitative",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "String nom_qualitative = datum.qualitatives['nebulosite'];\n  return nom_qualitative == '' ? '' : references.valeurs_qualitative\n          .findAll({ it.refValues['nom_key'].equals('nebulosite') })\n          .find({ it.naturalKey.split('__')[1].equalsIgnoreCase(nom_qualitative) }).naturalKey;\n",
                        "references": [
                          "valeurs_qualitative"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "ensoleillement": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "valeurs_qualitative",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "String nom_qualitative = datum.qualitatives['ensoleillement'];\n  return nom_qualitative == '' ? '' : references.valeurs_qualitative\n          .findAll({ it.refValues['nom_key'].equals('ensoleillement') })\n          .find({ it.naturalKey.split('__')[1].equalsIgnoreCase(nom_qualitative) }).naturalKey;\n",
                        "references": [
                          "valeurs_qualitative"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "aspect de l'eau": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "valeurs_qualitative",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "String nom_qualitative = datum.qualitatives[\"aspect de l'eau\"];\n  return nom_qualitative == '' ? '' : references.valeurs_qualitative\n          .findAll({ it.refValues['nom_key'].equals('aspect de l_eau') })\n          .find({ it.naturalKey.split('__')[1].equalsIgnoreCase(nom_qualitative) }).naturalKey;\n",
                        "references": [
                          "valeurs_qualitative"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "etat de surface": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "valeurs_qualitative",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "String nom_qualitative = datum.qualitatives['etat de surface']; return nom_qualitative == '' ? '' : references.valeurs_qualitative\n        .findAll({ it.refValues['nom_key'].equals('etat de surface') })\n        .find({ it.naturalKey.split('__')[1].equalsIgnoreCase(nom_qualitative) }).naturalKey;\n",
                        "references": [
                          "valeurs_qualitative"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "vitesse du vent": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "valeurs_qualitative",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "String nom_qualitative = datum.qualitatives['vitesse du vent'];\n  return nom_qualitative == '' ? '' : references.valeurs_qualitative\n          .findAll({ it.refValues['nom_key'].equals('vitesse du vent') })\n          .find({ it.naturalKey.split('__')[1].equalsIgnoreCase(nom_qualitative) }).naturalKey;\n",
                        "references": [
                          "valeurs_qualitative"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "couleur de l_eau": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "valeurs_qualitative",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "String nom_qualitative = datum.qualitatives['couleur de l_eau'];\n  return nom_qualitative == '' ? '' : references.valeurs_qualitative\n          .findAll({ it.refValues['nom_key'].equals('couleur de l_eau') })\n          .find({ it.naturalKey.split('__')[1].equalsIgnoreCase(nom_qualitative) }).naturalKey;\n",
                        "references": [
                          "valeurs_qualitative"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "direction du vent": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "valeurs_qualitative",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": {
                        "expression": "String nom_qualitative = datum.qualitatives['direction du vent'];\n  return nom_qualitative == '' ? '' : references.valeurs_qualitative\n          .findAll({ it.refValues['nom_key'].equals('direction du vent') })\n          .find({ it.naturalKey.split('__')[1].equalsIgnoreCase(nom_qualitative) }).naturalKey;\n",
                        "references": [
                          "valeurs_qualitative"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "transparence": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"metre\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "transparence par secchi": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.transparence['transparence par secchi'].replaceAll(',','.'); String dataTypes = 'conditions_prelevements'; String site = datum.site['nom du site']; String variable = 'transparence_par_secchi_20_cm'; if(references.controle_coherence\n        .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n        .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) }).size()!=0  && valeur!=\"\") {\n    Object valeurTrouve = '' ? '' : references.controle_coherence\n            .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n            .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) })\n            .find({ it.refValues['nom du site'].equals(site.split(\"\\\\.\")[1]) });\n    if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n        throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n    } else if(valeurTrouve.find({ valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n        throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n    } else {\n        return valeur;\n    }\n} else {\n    return valeur;\n}\n",
                        "references": [
                          "controle_coherence",
                          "ref_site"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              },
              "transparence par disque inra": {
                "checker": {
                  "name": "Float",
                  "params": {
                    "pattern": null,
                    "refType": null,
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": false,
                      "groovy": {
                        "expression": "String valeur = datum.transparence['transparence par disque inra'].replaceAll(',','.'); String dataTypes = 'conditions_prelevements'; String site = datum.site['nom du site']; String variable = 'transparence_par_disque_inra'; if(references.controle_coherence\n        .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n        .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) }).size()!=0  && valeur!=\"\") {\n    Object valeurTrouve = '' ? '' : references.controle_coherence\n            .findAll({ it.refValues['nom du type de données'].equals(dataTypes) })\n            .findAll({ it.refValues['nom de la variable'].equalsIgnoreCase(variable) })\n            .find({ it.refValues['nom du site'].equals(site.split(\"\\\\.\")[1]) });\n    if(valeurTrouve.find({Float.parseFloat(it.refValues['valeur min']) <= Float.parseFloat(valeur) }) == null) {\n        throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être supérieure à la valeur %s\" , variable, valeur, valeurTrouve.refValues['valeur min']));\n    } else if(valeurTrouve.find({ valeurTrouve.find({ Float.parseFloat(it.refValues['valeur max']) >=  Float.parseFloat(valeur) }) }) == null) {\n        throw new IllegalArgumentException(String.format(\"la valeur de %s (%s) doit être inférieure à la valeur %s\" ,variable, valeur, valeurTrouve.refValues['valeur max']));\n    } else {\n        return valeur;\n    }\n} else {\n    return valeur;\n}\n",
                        "references": [
                          "controle_coherence",
                          "ref_site"
                        ],
                        "datatypes": []
                      }
                    },
                    "required": false,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": null
              }
            },
            "computedComponents": {}
          },
          "pression_atmospherique": {
            "chartDescription": null,
            "components": {
              "unite": {
                "checker": {
                  "name": "Reference",
                  "params": {
                    "pattern": null,
                    "refType": "unit",
                    "groovy": null,
                    "duration": null,
                    "transformation": {
                      "codify": true,
                      "groovy": null
                    },
                    "required": true,
                    "multiplicity": "ONE"
                  }
                },
                "defaultValue": {
                  "expression": "\"millibar\"",
                  "references": [],
                  "datatypes": []
                }
              },
              "value": null
            },
            "computedComponents": {}
          }
        },
        "validations": {},
        "uniqueness": [
          {
            "variable": "projet",
            "component": "value",
            "id": "projet_value",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "site",
            "component": "nom du site",
            "id": "site_nom du site",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "site",
            "component": "nom de la plateforme",
            "id": "site_nom de la plateforme",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          {
            "variable": "date",
            "component": "day",
            "id": "date_day",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          }
        ],
        "migrations": {},
        "authorization": {
          "timeScope": {
            "variable": "date",
            "component": "day",
            "id": "date_day",
            "type": "PARAM_VARIABLE_COMPONENT_KEY"
          },
          "authorizationScopes": {
            "site": {
              "internationalizationName": {
                "en": "Site",
                "fr": "Site"
              },
              "internationalizedColumns": null,
              "variable": "site",
              "component": "nom du site",
              "variableComponentKey": {
                "variable": "site",
                "component": "nom du site",
                "id": "site_nom du site",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            },
            "projet": {
              "internationalizationName": {
                "en": "Project",
                "fr": "Projet"
              },
              "internationalizedColumns": null,
              "variable": "projet",
              "component": "value",
              "variableComponentKey": {
                "variable": "projet",
                "component": "value",
                "id": "projet_value",
                "type": "PARAM_VARIABLE_COMPONENT_KEY"
              }
            }
          },
          "dataGroups": {
            "qualitatif": {
              "internationalizationName": {
                "en": "Qualitative data",
                "fr": "Données qualitatives"
              },
              "internationalizedColumns": null,
              "label": "Données qualitatives",
              "data": [
                "qualitatives"
              ]
            },
            "quantitatif": {
              "internationalizationName": {
                "en": "Quantitative data",
                "fr": "Données quantitatives"
              },
              "internationalizedColumns": null,
              "label": "Données quantitatives",
              "data": [
                "pression_atmospherique",
                "temperature",
                "transparence"
              ]
            },
            "referentiel": {
              "internationalizationName": {
                "en": "Referential",
                "fr": "Référentiel"
              },
              "internationalizedColumns": null,
              "label": "Référentiel",
              "data": [
                "date",
                "site",
                "projet",
                "commentaire"
              ]
            }
          },
          "columnsDescription": {
            "admin": {
              "internationalizationName": {
                "en": "Delegation",
                "fr": "Délégation"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "admin",
              "withPeriods": false,
              "withDataGroups": false
            },
            "depot": {
              "internationalizationName": {
                "en": "Deposit",
                "fr": "Dépôt"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "depot",
              "withPeriods": false,
              "withDataGroups": false
            },
            "delete": {
              "internationalizationName": {
                "en": "Deletion",
                "fr": "Suppression"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "delete",
              "withPeriods": false,
              "withDataGroups": false
            },
            "extraction": {
              "internationalizationName": {
                "en": "Extraction",
                "fr": "Extraction"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "extraction",
              "withPeriods": true,
              "withDataGroups": true
            },
            "publication": {
              "internationalizationName": {
                "en": "Publication",
                "fr": "Publication"
              },
              "internationalizedColumns": null,
              "display": true,
              "title": "publication",
              "withPeriods": false,
              "withDataGroups": false
            }
          },
          "internationalization": {
            "dataGroups": {
              "referentiel": {
                "internationalizationName": {
                  "en": "Referential",
                  "fr": "Référentiel"
                }
              },
              "qualitatif": {
                "internationalizationName": {
                  "en": "Qualitative data",
                  "fr": "Données qualitatives"
                }
              },
              "quantitatif": {
                "internationalizationName": {
                  "en": "Quantitative data",
                  "fr": "Données quantitatives"
                }
              }
            },
            "authorizationScopes": {
              "site": {
                "internationalizationName": {
                  "en": "Site",
                  "fr": "Site"
                }
              },
              "projet": {
                "internationalizationName": {
                  "en": "Project",
                  "fr": "Projet"
                }
              }
            },
            "columnsDescription": {
              "depot": {
                "internationalizationName": {
                  "en": "Deposit",
                  "fr": "Dépôt"
                }
              },
              "publication": {
                "internationalizationName": {
                  "en": "Publication",
                  "fr": "Publication"
                }
              },
              "admin": {
                "internationalizationName": {
                  "en": "Delegation",
                  "fr": "Délégation"
                }
              },
              "extraction": {
                "internationalizationName": {
                  "en": "Extraction",
                  "fr": "Extraction"
                }
              },
              "delete": {
                "internationalizationName": {
                  "en": "Deletion",
                  "fr": "Suppression"
                }
              }
            }
          }
        },
        "repository": {
          "filePattern": "(.*)!(.*)_conditions_prelevements_(.*)_(.*).csv",
          "authorizationScope": {
            "site": 2,
            "projet": 1
          },
          "startDate": {
            "token": 3
          },
          "endDate": {
            "token": 4
          }
        },
        "tags": []
      }
    }
  }
}
